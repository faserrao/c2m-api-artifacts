{
  "info": {
    "name": "C2mApiV2TestCollection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "item": []
  },
  "item": [
    {
      "name": "auth",
      "description": "",
      "item": [
        {
          "name": "tokens",
          "description": "",
          "item": [
            {
              "name": "short",
              "description": "",
              "item": [
                {
                  "id": "8047e23b-7d8f-4df6-829e-8b8d18c0253e",
                  "name": "Issue a short-term access token",
                  "request": {
                    "name": "Issue a short-term access token",
                    "description": {
                      "content": "Exchange a valid long-term token for a short-lived JWT (e.g., 15 minutes).\nThe long-term token must be sent in the Authorization header as `Bearer <long_token>`.\n",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "auth",
                        "tokens",
                        "short"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/auth/tokens/short"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"long_token\": \"nihil\",\n  \"scopes\": [\n    \"blandior\",\n    \"curtus\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{bearerToken}}"
                        }
                      ]
                    },
                    "item": []
                  },
                  "response": [
                    {
                      "id": "a41e64f2-9e88-4d7d-b218-b7766e8cbb14",
                      "name": "Short-term token issued",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [],
                          "raw": "{{baseUrl}}/auth/tokens/short"
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"una\",\n  \"scopes\": [\n    \"nostrum\",\n    \"cogito\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"token_type\": \"Bearer\",\n  \"access_token\": \"voco\",\n  \"expires_in\": 705,\n  \"expires_at\": \"<dateTime>\",\n  \"scopes\": [\n    \"altus\",\n    \"careo\"\n  ],\n  \"token_id\": \"kLPoQV9ah8\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json",
                      "item": []
                    },
                    {
                      "id": "52497024-0f65-4e3b-9039-570dd4c4405c",
                      "name": "Bad request",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [],
                          "raw": "{{baseUrl}}/auth/tokens/short"
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"infit\",\n  \"scopes\": [\n    \"cohibeo\",\n    \"creta\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"cibo\",\n  \"message\": 70,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json",
                      "item": []
                    },
                    {
                      "id": "94b65674-e73f-45a7-9a82-25901c7aeb20",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [],
                          "raw": "{{baseUrl}}/auth/tokens/short"
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"spargo\",\n  \"scopes\": [\n    \"pecto\",\n    \"tripudio\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"vesco\",\n  \"message\": 40,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json",
                      "item": []
                    },
                    {
                      "id": "55d83db2-f3d5-42c7-9aad-df7d6a90520d",
                      "name": "Too Many Requests",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [],
                          "raw": "{{baseUrl}}/auth/tokens/short"
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"aedificium\",\n  \"scopes\": [\n    \"sed\",\n    \"demo\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"dolore\",\n  \"message\": 28,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json",
                      "item": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                          "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                        ]
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ]
            },
            {
              "name": "long",
              "description": "",
              "item": [
                {
                  "id": "5259167e-115d-44a1-a36c-c2f820c1102d",
                  "name": "Issue or rotate a long-term token",
                  "request": {
                    "name": "Issue or rotate a long-term token",
                    "description": {
                      "content": "Issues a long-term token (e.g., 30-90 days) for automation or server-to-server use.\nRequires step-up authentication. Choose one of the supported grant types:\n\n- `client_credentials` + `client_secret`\n- `client_credentials` + one-time `otp_code`\n- `assertion` (e.g., signed JWT by your private key)\n- Or an existing short-term token with the `tokens:write` scope\n\nOnly one mechanism is required per call.\n",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "auth",
                        "tokens",
                        "long"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/auth/tokens/long"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"NQe8SlN4LA\",\n  \"client_secret\": \"aufero\",\n  \"otp_code\": \"laborum\",\n  \"assertion_type\": \"cruentus\",\n  \"assertion\": \"bos\",\n  \"scopes\": [\n    \"aer\",\n    \"clibanus\"\n  ],\n  \"ttl_seconds\": 934\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{bearerToken}}"
                        }
                      ]
                    },
                    "item": []
                  },
                  "response": [
                    {
                      "id": "9f0e1037-89de-4e3e-8b86-4f8835537e03",
                      "name": "Long-term token issued",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [],
                          "raw": "{{baseUrl}}/auth/tokens/long"
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"7wxIPrM9PP\",\n  \"client_secret\": \"aestivus\",\n  \"otp_code\": \"vicinus\",\n  \"assertion_type\": \"contra\",\n  \"assertion\": \"deleniti\",\n  \"scopes\": [\n    \"talus\",\n    \"vulgaris\"\n  ],\n  \"ttl_seconds\": 838\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "Server-generated identifier for revocation and audit",
                            "type": "text/plain"
                          },
                          "key": "X-Token-Id",
                          "value": "<string>"
                        }
                      ],
                      "body": "{\n  \"token_type\": \"Bearer\",\n  \"access_token\": \"dolorem\",\n  \"expires_in\": 167,\n  \"expires_at\": \"<dateTime>\",\n  \"scopes\": [\n    \"demulceo\",\n    \"tutamen\"\n  ],\n  \"token_id\": \"ON9WaYrgTT\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json",
                      "item": []
                    },
                    {
                      "id": "969c46c9-1ff2-42ec-baf1-11b6b4a4a871",
                      "name": "Bad request",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [],
                          "raw": "{{baseUrl}}/auth/tokens/long"
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"mq0qhKDcKG\",\n  \"client_secret\": \"enim\",\n  \"otp_code\": \"capio\",\n  \"assertion_type\": \"curatio\",\n  \"assertion\": \"tero\",\n  \"scopes\": [\n    \"demulceo\",\n    \"voro\"\n  ],\n  \"ttl_seconds\": 258\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"delectus\",\n  \"message\": 47,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json",
                      "item": []
                    },
                    {
                      "id": "e6a9ffe5-f51c-44b4-9520-0a0a8d419f19",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [],
                          "raw": "{{baseUrl}}/auth/tokens/long"
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"s4yzQIT6eS\",\n  \"client_secret\": \"beneficium\",\n  \"otp_code\": \"caelum\",\n  \"assertion_type\": \"truculenter\",\n  \"assertion\": \"depopulo\",\n  \"scopes\": [\n    \"bellum\",\n    \"civitas\"\n  ],\n  \"ttl_seconds\": 726\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"verbera\",\n  \"message\": 60,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json",
                      "item": []
                    },
                    {
                      "id": "7bf59b50-14fc-43c4-9d45-d1725f63590c",
                      "name": "Forbidden",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [],
                          "raw": "{{baseUrl}}/auth/tokens/long"
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"IA6ITSpZbJ\",\n  \"client_secret\": \"versus\",\n  \"otp_code\": \"aequus\",\n  \"assertion_type\": \"debeo\",\n  \"assertion\": \"clamo\",\n  \"scopes\": [\n    \"virtus\",\n    \"theca\"\n  ],\n  \"ttl_seconds\": 472\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"ad\",\n  \"message\": 40,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json",
                      "item": []
                    },
                    {
                      "id": "72c4968d-114f-444e-9d3f-df40ff8bb769",
                      "name": "Too Many Requests",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [],
                          "raw": "{{baseUrl}}/auth/tokens/long"
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"PAGlQUvojv\",\n  \"client_secret\": \"vitiosus\",\n  \"otp_code\": \"succedo\",\n  \"assertion_type\": \"vulnero\",\n  \"assertion\": \"error\",\n  \"scopes\": [\n    \"atque\",\n    \"verbera\"\n  ],\n  \"ttl_seconds\": 908\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"conscendo\",\n  \"message\": 52,\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json",
                      "item": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                          "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                        ]
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ]
            },
            {
              "name": "{tokenId}",
              "description": "",
              "item": [
                {
                  "name": "revoke",
                  "description": "",
                  "item": [
                    {
                      "id": "2aa87f33-adc9-4b49-8ef2-088d80bc26fc",
                      "name": "Revoke a token",
                      "request": {
                        "name": "Revoke a token",
                        "description": {
                          "content": "Revokes a short- or long-term token by its `tokenId`. Idempotent.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            ":tokenId",
                            "revoke"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "value": "<string>",
                              "key": "tokenId",
                              "disabled": false,
                              "description": {
                                "content": "(Required) The token ID to revoke",
                                "type": "text/plain"
                              }
                            }
                          ],
                          "raw": "{{baseUrl}}/auth/tokens/:tokenId/revoke"
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{bearerToken}}"
                            }
                          ]
                        },
                        "item": []
                      },
                      "response": [
                        {
                          "id": "31dba33e-dbf5-4c3a-86f9-37b7e4a3865f",
                          "name": "Revoked (idempotent)",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "auth",
                                "tokens",
                                ":tokenId",
                                "revoke"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [],
                              "raw": "{{baseUrl}}/auth/tokens/:tokenId/revoke"
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: bearer",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "method": "POST",
                            "body": {}
                          },
                          "status": "No Content",
                          "code": 204,
                          "header": [],
                          "cookie": [],
                          "_postman_previewlanguage": "text",
                          "item": []
                        },
                        {
                          "id": "36e24682-6b47-41e3-a9af-4e388f5f7451",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "auth",
                                "tokens",
                                ":tokenId",
                                "revoke"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [],
                              "raw": "{{baseUrl}}/auth/tokens/:tokenId/revoke"
                            },
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: bearer",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "method": "POST",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"code\": \"sub\",\n  \"message\": 48,\n  \"details\": {}\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json",
                          "item": []
                        },
                        {
                          "id": "d550be1e-c5a7-40bf-98f0-43ba375c8165",
                          "name": "Not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "auth",
                                "tokens",
                                ":tokenId",
                                "revoke"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [],
                              "raw": "{{baseUrl}}/auth/tokens/:tokenId/revoke"
                            },
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: bearer",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "method": "POST",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"code\": \"tergum\",\n  \"message\": 67,\n  \"details\": {}\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json",
                          "item": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                            ]
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "jobs",
      "description": "",
      "item": [
        {
          "name": "single-doc-job-template",
          "description": "",
          "item": [
            {
              "id": "b2589875-98ec-491b-b738-420fd68b6d58",
              "name": "Operation for /jobs/single-doc-job-template",
              "request": {
                "name": "Operation for /jobs/single-doc-job-template",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [],
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template"
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"jobTemplate\": \"commemoro\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"vestigium\",\n      \"expirationDate\": {\n        \"month\": 954,\n        \"year\": 2013\n      },\n      \"cvv\": 384\n    }\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Mckenna\",\n      \"lastName\": \"Berge\",\n      \"address1\": \"605 Jessica Knoll\",\n      \"city\": \"Lake Lamar\",\n      \"state\": \"Hawaii\",\n      \"zip\": \"51477-8513\",\n      \"country\": \"Saint Lucia\",\n      \"nickName\": \"Della Bartoletti\",\n      \"address2\": \"2286 Railway Street\",\n      \"address3\": \"234 Pagac Locks\",\n      \"phoneNumber\": \"1-489-935-4930\"\n    },\n    {\n      \"firstName\": \"Art\",\n      \"lastName\": \"Rippin\",\n      \"address1\": \"755 Dale Square\",\n      \"city\": \"South Christiana\",\n      \"state\": \"New Hampshire\",\n      \"zip\": \"12032-7207\",\n      \"country\": \"Wallis and Futuna\",\n      \"nickName\": \"Patrick Runolfsdottir PhD\",\n      \"address2\": \"44931 Amira Parks\",\n      \"address3\": \"235 Bode Lodge\",\n      \"phoneNumber\": \"1-758-276-7861 x2115\"\n    }\n  ],\n  \"tags\": [\n    \"ventosus\",\n    \"quas\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null,
                "item": []
              },
              "response": [
                {
                  "id": "007e8505-b886-4c12-95a7-b644d99f9253",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-doc-job-template"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jobTemplate\": \"bos\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"adnuo\",\n      \"expirationDate\": {\n        \"month\": 926,\n        \"year\": 2014\n      },\n      \"cvv\": 417\n    }\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Geraldine\",\n      \"lastName\": \"Collins\",\n      \"address1\": \"27873 Friesen Tunnel\",\n      \"city\": \"Kellihaven\",\n      \"state\": \"New Hampshire\",\n      \"zip\": \"84645\",\n      \"country\": \"Rwanda\",\n      \"nickName\": \"Roderick Stracke\",\n      \"address2\": \"3967 Muller Mills\",\n      \"address3\": \"1891 Larson Cape\",\n      \"phoneNumber\": \"1-552-345-5418 x61803\"\n    },\n    {\n      \"firstName\": \"Allen\",\n      \"lastName\": \"Wiza\",\n      \"address1\": \"10887 Jordane Glen\",\n      \"city\": \"Omaha\",\n      \"state\": \"Utah\",\n      \"zip\": \"00222-7134\",\n      \"country\": \"Sao Tome and Principe\",\n      \"nickName\": \"Emma Balistreri-Feeney II\",\n      \"address2\": \"36750 Bradley Streets\",\n      \"address3\": \"993 Tiana Spurs\",\n      \"phoneNumber\": \"797.668.3492\"\n    }\n  ],\n  \"tags\": [\n    \"demonstro\",\n    \"cubicularis\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"culpa\",\n  \"message\": 42,\n  \"jobId\": \"b6UtBB7hQ6\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json",
                  "item": []
                },
                {
                  "id": "90ca81a1-04db-4c0f-bdce-065491c53063",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-doc-job-template"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jobTemplate\": \"quam\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"cuius\",\n      \"expirationDate\": {\n        \"month\": 910,\n        \"year\": 2000\n      },\n      \"cvv\": 319\n    }\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Olga\",\n      \"lastName\": \"Romaguera\",\n      \"address1\": \"174 Bryon Highway\",\n      \"city\": \"Isabellastad\",\n      \"state\": \"Utah\",\n      \"zip\": \"40765-0889\",\n      \"country\": \"Faroe Islands\",\n      \"nickName\": \"Steven Dietrich\",\n      \"address2\": \"93761 George Street\",\n      \"address3\": \"5209 Roberts Lakes\",\n      \"phoneNumber\": \"373-297-7782 x85674\"\n    },\n    {\n      \"firstName\": \"Queen\",\n      \"lastName\": \"Brakus\",\n      \"address1\": \"41777 Leuschke Trail\",\n      \"city\": \"Shieldsmouth\",\n      \"state\": \"Utah\",\n      \"zip\": \"77533\",\n      \"country\": \"Mongolia\",\n      \"nickName\": \"Catherine Dach\",\n      \"address2\": \"2522 Valley Road\",\n      \"address3\": \"141 Lincoln Highway\",\n      \"phoneNumber\": \"(739) 933-7328\"\n    }\n  ],\n  \"tags\": [\n    \"harum\",\n    \"aequus\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                },
                {
                  "id": "5516a980-ea07-4b9d-8041-d685797d0887",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-doc-job-template"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jobTemplate\": \"abstergo\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"via\",\n      \"expirationDate\": {\n        \"month\": 653,\n        \"year\": 2005\n      },\n      \"cvv\": 721\n    }\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Casper\",\n      \"lastName\": \"Reynolds\",\n      \"address1\": \"199 Prudence Landing\",\n      \"city\": \"Zboncakside\",\n      \"state\": \"North Carolina\",\n      \"zip\": \"15655\",\n      \"country\": \"Bouvet Island\",\n      \"nickName\": \"David Harris\",\n      \"address2\": \"797 Howard Road\",\n      \"address3\": \"70455 Randy Loaf\",\n      \"phoneNumber\": \"(750) 618-2768 x12423\"\n    },\n    {\n      \"firstName\": \"Lukas\",\n      \"lastName\": \"Flatley\",\n      \"address1\": \"56445 Vivianne Spurs\",\n      \"city\": \"East Nellafurt\",\n      \"state\": \"South Dakota\",\n      \"zip\": \"89929-4050\",\n      \"country\": \"Palau\",\n      \"nickName\": \"Elmer Hamill\",\n      \"address2\": \"16412 Laney Field\",\n      \"address3\": \"31294 College Avenue\",\n      \"phoneNumber\": \"(332) 980-9892\"\n    }\n  ],\n  \"tags\": [\n    \"confero\",\n    \"tepesco\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-docs-job-template",
          "description": "",
          "item": [
            {
              "id": "1c6be2c1-55e1-4cde-aef8-f3f054d447e5",
              "name": "Operation for /jobs/multi-docs-job-template",
              "request": {
                "name": "Operation for /jobs/multi-docs-job-template",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-docs-job-template"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [],
                  "raw": "{{baseUrl}}/jobs/multi-docs-job-template"
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"qFJVPfOkev\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Ona\",\n        \"lastName\": \"Collins\",\n        \"address1\": \"91720 E Park Avenue\",\n        \"city\": \"North Abbieport\",\n        \"state\": \"Colorado\",\n        \"zip\": \"27391\",\n        \"country\": \"Bangladesh\",\n        \"nickName\": \"Dr. Ada Goodwin\",\n        \"address2\": \"30398 E High Street\",\n        \"address3\": \"505 Emmerich Rapid\",\n        \"phoneNumber\": \"1-657-952-7245 x042\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"am4k1VruuQ\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Kiana\",\n        \"lastName\": \"Goyette\",\n        \"address1\": \"53577 Olson Crest\",\n        \"city\": \"West Daynaworth\",\n        \"state\": \"North Dakota\",\n        \"zip\": \"61328-7614\",\n        \"country\": \"Nauru\",\n        \"nickName\": \"Rudolph Franey\",\n        \"address2\": \"19031 Veterans Memorial Highway\",\n        \"address3\": \"134 Cedrick Cliffs\",\n        \"phoneNumber\": \"744-558-5955 x626\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"corona\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"cattus\",\n      \"expirationDate\": {\n        \"month\": 255,\n        \"year\": 2012\n      },\n      \"cvv\": 592\n    }\n  },\n  \"tags\": [\n    \"solium\",\n    \"celer\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null,
                "item": []
              },
              "response": [
                {
                  "id": "61c8af25-e958-4ff8-b05f-fc1e695cb096",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-docs-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-docs-job-template"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"4WhGwTZNkj\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Neoma\",\n        \"lastName\": \"Erdman\",\n        \"address1\": \"28985 Stoney Lane\",\n        \"city\": \"Lake Emilia\",\n        \"state\": \"Arkansas\",\n        \"zip\": \"86029-2846\",\n        \"country\": \"Honduras\",\n        \"nickName\": \"Miss Pauline Becker\",\n        \"address2\": \"948 Berge Greens\",\n        \"address3\": \"997 Jacquelyn Track\",\n        \"phoneNumber\": \"1-606-938-7101\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"mgaY4uHN4J\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Destiney\",\n        \"lastName\": \"Trantow\",\n        \"address1\": \"604 Sammie Forge\",\n        \"city\": \"Marinaland\",\n        \"state\": \"Connecticut\",\n        \"zip\": \"34309\",\n        \"country\": \"United Arab Emirates\",\n        \"nickName\": \"Al Hamill\",\n        \"address2\": \"4905 Manor Close\",\n        \"address3\": \"5962 S Center Street\",\n        \"phoneNumber\": \"(870) 284-8399\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"appono\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"uredo\",\n      \"expirationDate\": {\n        \"month\": 309,\n        \"year\": 2010\n      },\n      \"cvv\": 501\n    }\n  },\n  \"tags\": [\n    \"brevis\",\n    \"deficio\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"utroque\",\n  \"message\": 61,\n  \"jobId\": \"F3yBRmw6Ld\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json",
                  "item": []
                },
                {
                  "id": "25abf374-1a01-45ac-840d-c5f32e9fe1e5",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-docs-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-docs-job-template"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"QMgPkpHkdu\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Ignacio\",\n        \"lastName\": \"Lehner\",\n        \"address1\": \"2972 Morissette Fork\",\n        \"city\": \"Adamsfort\",\n        \"state\": \"New Jersey\",\n        \"zip\": \"66668\",\n        \"country\": \"Martinique\",\n        \"nickName\": \"Earl Howell\",\n        \"address2\": \"998 Brook Lane\",\n        \"address3\": \"239 Church Close\",\n        \"phoneNumber\": \"1-964-445-6763 x26645\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"wqjvyOGhmm\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Maybell\",\n        \"lastName\": \"Fisher\",\n        \"address1\": \"161 Botsford Expressway\",\n        \"city\": \"Fall River\",\n        \"state\": \"Delaware\",\n        \"zip\": \"41895\",\n        \"country\": \"Philippines\",\n        \"nickName\": \"Kristopher Bergnaum\",\n        \"address2\": \"9015 Rae Fall\",\n        \"address3\": \"47288 Lila Mill\",\n        \"phoneNumber\": \"(482) 967-9644 x70678\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"claudeo\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"ipsum\",\n      \"expirationDate\": {\n        \"month\": 842,\n        \"year\": 2005\n      },\n      \"cvv\": 980\n    }\n  },\n  \"tags\": [\n    \"claustrum\",\n    \"adstringo\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                },
                {
                  "id": "e6bd701c-0e8d-4183-94ae-ced859145909",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-docs-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-docs-job-template"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"DBig9a0qNc\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Stephen\",\n        \"lastName\": \"Bernier\",\n        \"address1\": \"61007 Kuphal Place\",\n        \"city\": \"Eugene\",\n        \"state\": \"South Carolina\",\n        \"zip\": \"41131\",\n        \"country\": \"Bermuda\",\n        \"nickName\": \"Vicki Hahn V\",\n        \"address2\": \"9549 Buckridge Highway\",\n        \"address3\": \"748 The Mews\",\n        \"phoneNumber\": \"446.390.8439\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"0yuQ8aWu9s\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Lafayette\",\n        \"lastName\": \"Murphy\",\n        \"address1\": \"251 W Broadway Avenue\",\n        \"city\": \"Corvallis\",\n        \"state\": \"West Virginia\",\n        \"zip\": \"96552-8751\",\n        \"country\": \"Guinea-Bissau\",\n        \"nickName\": \"Ms. Alma Windler\",\n        \"address2\": \"19066 Lodge Close\",\n        \"address3\": \"590 Moises Burgs\",\n        \"phoneNumber\": \"1-434-682-6800\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"aggredior\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"complectus\",\n      \"expirationDate\": {\n        \"month\": 289,\n        \"year\": 2005\n      },\n      \"cvv\": 325\n    }\n  },\n  \"tags\": [\n    \"corrumpo\",\n    \"tergeo\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-doc-merge-job-template",
          "description": "",
          "item": [
            {
              "id": "66e47795-84c9-47d2-be9c-ac800faccd26",
              "name": "Operation for /jobs/multi-doc-merge-job-template",
              "request": {
                "name": "Operation for /jobs/multi-doc-merge-job-template",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-doc-merge-job-template"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [],
                  "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template"
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    741,\n    1\n  ],\n  \"jobTemplate\": \"tot\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"coadunatio\",\n      \"expirationDate\": {\n        \"month\": 472,\n        \"year\": 2010\n      },\n      \"cvv\": 873\n    }\n  },\n  \"tags\": [\n    \"sto\",\n    \"conventus\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null,
                "item": []
              },
              "response": [
                {
                  "id": "8ccdf1de-71ab-41d6-9a49-c8002b1c23d4",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    154,\n    529\n  ],\n  \"jobTemplate\": \"canto\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"adsidue\",\n      \"expirationDate\": {\n        \"month\": 31,\n        \"year\": 2011\n      },\n      \"cvv\": 717\n    }\n  },\n  \"tags\": [\n    \"vobis\",\n    \"acies\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"absens\",\n  \"message\": 25,\n  \"jobId\": \"G85TFQ8uZG\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json",
                  "item": []
                },
                {
                  "id": "a2568c37-a5a7-45d6-86de-b0920fd16f9e",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    270,\n    390\n  ],\n  \"jobTemplate\": \"adopto\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"itaque\",\n      \"expirationDate\": {\n        \"month\": 282,\n        \"year\": 2011\n      },\n      \"cvv\": 823\n    }\n  },\n  \"tags\": [\n    \"accommodo\",\n    \"dignissimos\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                },
                {
                  "id": "bfc69948-2e29-4abd-bb45-495b69823f36",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    348,\n    975\n  ],\n  \"jobTemplate\": \"confugo\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"avaritia\",\n      \"expirationDate\": {\n        \"month\": 671,\n        \"year\": 2005\n      },\n      \"cvv\": 986\n    }\n  },\n  \"tags\": [\n    \"illo\",\n    \"deprimo\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "single-doc",
          "description": "",
          "item": [
            {
              "id": "e9a1b5b2-5835-46c6-ada5-ac3842c31629",
              "name": "Operation for /jobs/single-doc",
              "request": {
                "name": "Operation for /jobs/single-doc",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-doc"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [],
                  "raw": "{{baseUrl}}/jobs/single-doc"
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": \"kBflqAa5wA\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Leta\",\n      \"lastName\": \"Ernser\",\n      \"address1\": \"65412 Hazle Crescent\",\n      \"city\": \"Zoeyshire\",\n      \"state\": \"Arizona\",\n      \"zip\": \"90625\",\n      \"country\": \"Kazakhstan\",\n      \"nickName\": \"Belinda Zieme-Towne\",\n      \"address2\": \"83988 Oaklands\",\n      \"address3\": \"73658 Runolfsson Estate\",\n      \"phoneNumber\": \"1-786-755-5923 x097\"\n    },\n    {\n      \"firstName\": \"Joany\",\n      \"lastName\": \"Marks\",\n      \"address1\": \"9429 Victoria Place\",\n      \"city\": \"Lubbock\",\n      \"state\": \"New Hampshire\",\n      \"zip\": \"10851\",\n      \"country\": \"American Samoa\",\n      \"nickName\": \"Lionel Greenholt\",\n      \"address2\": \"86069 S Railroad Street\",\n      \"address3\": \"7409 Zola Locks\",\n      \"phoneNumber\": \"588.995.5802 x5430\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"legal\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"postcard\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"sto\",\n      \"expirationDate\": {\n        \"month\": 844,\n        \"year\": 2000\n      },\n      \"cvv\": 520\n    }\n  },\n  \"tags\": [\n    \"acsi\",\n    \"vindico\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null,
                "item": []
              },
              "response": [
                {
                  "id": "5f67a7a6-5eb7-4c5e-8990-98e5b904aea7",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-doc"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"J0rlIYeIvJ\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Yessenia\",\n      \"lastName\": \"Morar\",\n      \"address1\": \"8449 O'Hara Way\",\n      \"city\": \"Boscobury\",\n      \"state\": \"Louisiana\",\n      \"zip\": \"20635-8786\",\n      \"country\": \"Andorra\",\n      \"nickName\": \"Gladys Mueller\",\n      \"address2\": \"873 Estelle Walks\",\n      \"address3\": \"656 Cecilia Bridge\",\n      \"phoneNumber\": \"(765) 251-1394\"\n    },\n    {\n      \"firstName\": \"Ethelyn\",\n      \"lastName\": \"Powlowski\",\n      \"address1\": \"30737 Altenwerth Ridges\",\n      \"city\": \"East Julianaport\",\n      \"state\": \"Arkansas\",\n      \"zip\": \"42201\",\n      \"country\": \"Fiji\",\n      \"nickName\": \"Alan Walter\",\n      \"address2\": \"107 Cayla Camp\",\n      \"address3\": \"13305 Dietrich Knolls\",\n      \"phoneNumber\": \"1-369-390-8335 x9420\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"legal\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"postcard\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"decimus\",\n      \"expirationDate\": {\n        \"month\": 107,\n        \"year\": 2015\n      },\n      \"cvv\": 397\n    }\n  },\n  \"tags\": [\n    \"ciminatio\",\n    \"depono\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"angulus\",\n  \"message\": 54,\n  \"jobId\": \"aoyqCtSPkq\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json",
                  "item": []
                },
                {
                  "id": "e8bd3ab0-339c-4505-a4fc-81d6c5beaa20",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-doc"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"l5sGFtvRg3\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Marcelina\",\n      \"lastName\": \"Hartmann\",\n      \"address1\": \"818 Cedar Close\",\n      \"city\": \"Port Maymieburgh\",\n      \"state\": \"Maine\",\n      \"zip\": \"63097\",\n      \"country\": \"Poland\",\n      \"nickName\": \"Rick Willms\",\n      \"address2\": \"512 Ortiz Gateway\",\n      \"address3\": \"71174 Padberg Burgs\",\n      \"phoneNumber\": \"1-610-324-7104 x7431\"\n    },\n    {\n      \"firstName\": \"Lavon\",\n      \"lastName\": \"McGlynn\",\n      \"address1\": \"355 Effertz Plain\",\n      \"city\": \"East Danielaworth\",\n      \"state\": \"Connecticut\",\n      \"zip\": \"26917\",\n      \"country\": \"French Polynesia\",\n      \"nickName\": \"Annette Collins\",\n      \"address2\": \"878 S Bridge Street\",\n      \"address3\": \"2387 Priory Road\",\n      \"phoneNumber\": \"(752) 896-0904 x4747\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"legal\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"postcard\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"asperiores\",\n      \"expirationDate\": {\n        \"month\": 401,\n        \"year\": 2003\n      },\n      \"cvv\": 564\n    }\n  },\n  \"tags\": [\n    \"timidus\",\n    \"infit\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                },
                {
                  "id": "32056b0c-88e4-42df-b8dc-c1b68e5309b5",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-doc"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"fW8iiwSQmC\",\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Raina\",\n      \"lastName\": \"Rogahn\",\n      \"address1\": \"6331 The Maltings\",\n      \"city\": \"Verlafield\",\n      \"state\": \"Pennsylvania\",\n      \"zip\": \"97458\",\n      \"country\": \"Montenegro\",\n      \"nickName\": \"Lyle Fay\",\n      \"address2\": \"111 Verda Junction\",\n      \"address3\": \"9217 Auer Ramp\",\n      \"phoneNumber\": \"(410) 688-4522\"\n    },\n    {\n      \"firstName\": \"Jacinto\",\n      \"lastName\": \"Stark\",\n      \"address1\": \"9831 Kuphal Causeway\",\n      \"city\": \"Lake Coryhaven\",\n      \"state\": \"West Virginia\",\n      \"zip\": \"62085\",\n      \"country\": \"Brunei Darussalam\",\n      \"nickName\": \"Jim Stokes\",\n      \"address2\": \"6641 Corkery Via\",\n      \"address3\": \"7644 Broadway Avenue\",\n      \"phoneNumber\": \"262.622.2524 x157\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"legal\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"postcard\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"corpus\",\n      \"expirationDate\": {\n        \"month\": 299,\n        \"year\": 2003\n      },\n      \"cvv\": 32\n    }\n  },\n  \"tags\": [\n    \"cruciamentum\",\n    \"subseco\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-doc",
          "description": "",
          "item": [
            {
              "id": "51777f36-54a8-4985-95e7-815bd72a9c1f",
              "name": "Operation for /jobs/multi-doc",
              "request": {
                "name": "Operation for /jobs/multi-doc",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-doc"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [],
                  "raw": "{{baseUrl}}/jobs/multi-doc"
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"pfPVDoa2su\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Sadye\",\n        \"lastName\": \"Orn\",\n        \"address1\": \"2038 S Front Street\",\n        \"city\": \"Charleneburgh\",\n        \"state\": \"Wisconsin\",\n        \"zip\": \"71708\",\n        \"country\": \"Timor-Leste\",\n        \"nickName\": \"Dr. Wilson Kutch-Bruen\",\n        \"address2\": \"292 Swaniawski Hill\",\n        \"address3\": \"10577 Hauck Hollow\",\n        \"phoneNumber\": \"1-716-404-1151 x57219\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"UX48w1x6H7\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Salvatore\",\n        \"lastName\": \"Konopelski\",\n        \"address1\": \"1177 The Green\",\n        \"city\": \"Paradise\",\n        \"state\": \"Oklahoma\",\n        \"zip\": \"49824-6608\",\n        \"country\": \"Luxembourg\",\n        \"nickName\": \"Jacob Greenfelder\",\n        \"address2\": \"8301 Western Road\",\n        \"address3\": \"9298 Zieme Hills\",\n        \"phoneNumber\": \"615-859-2751 x38938\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"velut\",\n      \"expirationDate\": {\n        \"month\": 763,\n        \"year\": 2003\n      },\n      \"cvv\": 670\n    }\n  },\n  \"tags\": [\n    \"adflicto\",\n    \"clibanus\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null,
                "item": []
              },
              "response": [
                {
                  "id": "a62fe2c8-2bb3-4cf0-b9e0-c2108df426b7",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-doc"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"Fk4c1FVUs2\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Danielle\",\n        \"lastName\": \"Swaniawski\",\n        \"address1\": \"54917 Ash Road\",\n        \"city\": \"Glenniefield\",\n        \"state\": \"Louisiana\",\n        \"zip\": \"17266\",\n        \"country\": \"Latvia\",\n        \"nickName\": \"Erik Kuhic\",\n        \"address2\": \"193 Ritchie Village\",\n        \"address3\": \"7058 McKenzie Roads\",\n        \"phoneNumber\": \"1-558-765-9493 x9193\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"6Qc3cjZ06Y\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Pearl\",\n        \"lastName\": \"Schaden\",\n        \"address1\": \"8676 Marge Rest\",\n        \"city\": \"Port Matteoville\",\n        \"state\": \"Illinois\",\n        \"zip\": \"47106\",\n        \"country\": \"Lesotho\",\n        \"nickName\": \"Armando Koelpin\",\n        \"address2\": \"4972 James Street\",\n        \"address3\": \"5677 Water Street\",\n        \"phoneNumber\": \"(343) 551-0611 x7017\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"considero\",\n      \"expirationDate\": {\n        \"month\": 897,\n        \"year\": 2004\n      },\n      \"cvv\": 140\n    }\n  },\n  \"tags\": [\n    \"voveo\",\n    \"quae\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"crepusculum\",\n  \"message\": 47,\n  \"jobId\": \"z139XoYiZc\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json",
                  "item": []
                },
                {
                  "id": "707a8474-0002-47ef-8157-d9513f88b93b",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-doc"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"H1npTi7vdm\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Kylie\",\n        \"lastName\": \"Blick\",\n        \"address1\": \"138 Aliya Terrace\",\n        \"city\": \"Javontetown\",\n        \"state\": \"Nebraska\",\n        \"zip\": \"93037-8980\",\n        \"country\": \"Republic of Korea\",\n        \"nickName\": \"Daryl Dietrich PhD\",\n        \"address2\": \"7781 Bramley Close\",\n        \"address3\": \"2331 Rebeca Highway\",\n        \"phoneNumber\": \"(757) 811-9027 x3257\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"6JkOWwhtRT\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Raquel\",\n        \"lastName\": \"Ledner\",\n        \"address1\": \"3461 Willow Road\",\n        \"city\": \"Madiebury\",\n        \"state\": \"Kansas\",\n        \"zip\": \"31962\",\n        \"country\": \"Senegal\",\n        \"nickName\": \"Todd O'Keefe\",\n        \"address2\": \"716 West Pass\",\n        \"address3\": \"9082 Alverta Manors\",\n        \"phoneNumber\": \"225.297.4869 x24855\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"tondeo\",\n      \"expirationDate\": {\n        \"month\": 418,\n        \"year\": 2008\n      },\n      \"cvv\": 513\n    }\n  },\n  \"tags\": [\n    \"vulpes\",\n    \"acies\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                },
                {
                  "id": "7f8b5733-763f-4bb4-8d16-ec49ecfaf38f",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-doc"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": \"Wy0QYyrsAJ\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Lillie\",\n        \"lastName\": \"Nolan\",\n        \"address1\": \"26400 Highfield Avenue\",\n        \"city\": \"Kerlukeview\",\n        \"state\": \"Colorado\",\n        \"zip\": \"12620\",\n        \"country\": \"Palestine\",\n        \"nickName\": \"Beulah Green\",\n        \"address2\": \"8092 Jerrold Estates\",\n        \"address3\": \"9695 Cremin Curve\",\n        \"phoneNumber\": \"717.393.7985\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": \"k1xbgL4OEi\",\n      \"recipientAddressSource\": {\n        \"firstName\": \"Lorena\",\n        \"lastName\": \"Hartmann\",\n        \"address1\": \"23065 Josephine Harbors\",\n        \"city\": \"Gabeport\",\n        \"state\": \"Vermont\",\n        \"zip\": \"62285-2574\",\n        \"country\": \"Croatia\",\n        \"nickName\": \"Kristina Robel\",\n        \"address2\": \"945 Roberts Knoll\",\n        \"address3\": \"440 S Main Avenue\",\n        \"phoneNumber\": \"364.933.0934 x20044\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"volaticus\",\n      \"expirationDate\": {\n        \"month\": 430,\n        \"year\": 2008\n      },\n      \"cvv\": 943\n    }\n  },\n  \"tags\": [\n    \"sit\",\n    \"tametsi\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-doc-merge",
          "description": "",
          "item": [
            {
              "id": "6c8b629d-d45c-46f5-a12e-eb0fbf08cb41",
              "name": "Operation for /jobs/multi-doc-merge",
              "request": {
                "name": "Operation for /jobs/multi-doc-merge",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-doc-merge"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [],
                  "raw": "{{baseUrl}}/jobs/multi-doc-merge"
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    860,\n    546\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Kianna\",\n    \"lastName\": \"Gleason\",\n    \"address1\": \"5225 Torphy Course\",\n    \"city\": \"Loveland\",\n    \"state\": \"Wyoming\",\n    \"zip\": \"88840\",\n    \"country\": \"Cuba\",\n    \"nickName\": \"Lynn Lindgren\",\n    \"address2\": \"325 Gerlach Landing\",\n    \"address3\": \"61134 Adams View\",\n    \"phoneNumber\": \"1-207-208-5112 x00328\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"aeternus\",\n      \"expirationDate\": {\n        \"month\": 870,\n        \"year\": 2009\n      },\n      \"cvv\": 596\n    }\n  },\n  \"tags\": [\n    \"pauci\",\n    \"temeritas\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null,
                "item": []
              },
              "response": [
                {
                  "id": "9e370bae-cf8d-473f-8ebc-63a6cd6f47a2",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-doc-merge"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    365,\n    845\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Haylie\",\n    \"lastName\": \"Wilkinson\",\n    \"address1\": \"16252 Euna Trail\",\n    \"city\": \"West Justusbury\",\n    \"state\": \"Nevada\",\n    \"zip\": \"58441\",\n    \"country\": \"Eswatini\",\n    \"nickName\": \"Laura Medhurst\",\n    \"address2\": \"5134 Willms Flat\",\n    \"address3\": \"78530 Wintheiser Coves\",\n    \"phoneNumber\": \"(758) 675-1658 x5281\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"ars\",\n      \"expirationDate\": {\n        \"month\": 541,\n        \"year\": 2000\n      },\n      \"cvv\": 536\n    }\n  },\n  \"tags\": [\n    \"currus\",\n    \"depono\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"confero\",\n  \"message\": 57,\n  \"jobId\": \"1f5xi8ivX5\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json",
                  "item": []
                },
                {
                  "id": "ae19d726-35f0-40da-88d6-97132682b5af",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-doc-merge"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    941,\n    943\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Jarrod\",\n    \"lastName\": \"Cruickshank\",\n    \"address1\": \"89599 Garnet Squares\",\n    \"city\": \"McGlynnhaven\",\n    \"state\": \"North Carolina\",\n    \"zip\": \"66876-2429\",\n    \"country\": \"Christmas Island\",\n    \"nickName\": \"Marty Towne\",\n    \"address2\": \"20663 Lillie Mount\",\n    \"address3\": \"365 Johnson Fords\",\n    \"phoneNumber\": \"(816) 280-7631 x56130\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"tunc\",\n      \"expirationDate\": {\n        \"month\": 725,\n        \"year\": 2007\n      },\n      \"cvv\": 405\n    }\n  },\n  \"tags\": [\n    \"tristis\",\n    \"careo\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                },
                {
                  "id": "f934b9b0-ab10-47da-9a2d-3c4a4eddc04f",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-doc-merge"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    900,\n    34\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Kaitlin\",\n    \"lastName\": \"Bashirian\",\n    \"address1\": \"1632 Hauck Roads\",\n    \"city\": \"Largo\",\n    \"state\": \"Oregon\",\n    \"zip\": \"13420\",\n    \"country\": \"Bonaire, Sint Eustatius and Saba\",\n    \"nickName\": \"Ira Kovacek\",\n    \"address2\": \"76369 High Road\",\n    \"address3\": \"9785 State Avenue\",\n    \"phoneNumber\": \"(347) 955-9296\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"audentia\",\n      \"expirationDate\": {\n        \"month\": 180,\n        \"year\": 2007\n      },\n      \"cvv\": 727\n    }\n  },\n  \"tags\": [\n    \"asper\",\n    \"antiquus\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "single-pdf-split",
          "description": "",
          "item": [
            {
              "id": "13c6de27-59eb-413a-8cb8-34c9f685746a",
              "name": "Operation for /jobs/single-pdf-split",
              "request": {
                "name": "Operation for /jobs/single-pdf-split",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-pdf-split"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [],
                  "raw": "{{baseUrl}}/jobs/single-pdf-split"
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": \"5mW3qMYExq\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 32,\n        \"endPage\": 73\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Caden\",\n          \"lastName\": \"Labadie\",\n          \"address1\": \"978 Bartell Mountains\",\n          \"city\": \"West Amie\",\n          \"state\": \"Alaska\",\n          \"zip\": \"43011-2936\",\n          \"country\": \"Luxembourg\",\n          \"nickName\": \"Aubrey Cummings\",\n          \"address2\": \"8007 Larson Burgs\",\n          \"address3\": \"5060 W 12th Street\",\n          \"phoneNumber\": \"483-706-6032\"\n        },\n        {\n          \"firstName\": \"Jadyn\",\n          \"lastName\": \"Lind\",\n          \"address1\": \"4140 Wilfredo Center\",\n          \"city\": \"Riverview\",\n          \"state\": \"Nevada\",\n          \"zip\": \"78149\",\n          \"country\": \"Brazil\",\n          \"nickName\": \"Lindsey Pouros-Lehner II\",\n          \"address2\": \"295 Schultz Park\",\n          \"address3\": \"34033 Highfield Road\",\n          \"phoneNumber\": \"817.423.1019\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 51,\n        \"endPage\": 54\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Kamille\",\n          \"lastName\": \"Brown\",\n          \"address1\": \"81481 Ara Turnpike\",\n          \"city\": \"Plymouth\",\n          \"state\": \"Oregon\",\n          \"zip\": \"59829-2804\",\n          \"country\": \"Aland Islands\",\n          \"nickName\": \"Evelyn Crist DDS\",\n          \"address2\": \"124 Rolando Road\",\n          \"address3\": \"14019 University Avenue\",\n          \"phoneNumber\": \"(601) 338-7207 x9439\"\n        },\n        {\n          \"firstName\": \"Keshawn\",\n          \"lastName\": \"Pacocha-Boyer\",\n          \"address1\": \"28901 Dare Estate\",\n          \"city\": \"Theresiaville\",\n          \"state\": \"Utah\",\n          \"zip\": \"94235-0270\",\n          \"country\": \"Oman\",\n          \"nickName\": \"Anne Bahringer\",\n          \"address2\": \"168 Woodlands Avenue\",\n          \"address3\": \"1804 Kaelyn Key\",\n          \"phoneNumber\": \"692.997.5052 x202\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"verecundia\",\n      \"expirationDate\": {\n        \"month\": 733,\n        \"year\": 2010\n      },\n      \"cvv\": 411\n    }\n  },\n  \"tags\": [\n    \"ducimus\",\n    \"adipiscor\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null,
                "item": []
              },
              "response": [
                {
                  "id": "d64f6948-c224-4b64-938f-8f164c4b1f36",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-pdf-split"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"vSF5Y1vQSO\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 41,\n        \"endPage\": 38\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Ike\",\n          \"lastName\": \"Berge\",\n          \"address1\": \"3377 Taryn Burgs\",\n          \"city\": \"Carolfurt\",\n          \"state\": \"Montana\",\n          \"zip\": \"10495\",\n          \"country\": \"Jamaica\",\n          \"nickName\": \"Troy Abernathy\",\n          \"address2\": \"1062 Legros Knolls\",\n          \"address3\": \"8147 S Church Street\",\n          \"phoneNumber\": \"472-765-6216 x1288\"\n        },\n        {\n          \"firstName\": \"Odie\",\n          \"lastName\": \"MacGyver\",\n          \"address1\": \"96502 S 3rd Street\",\n          \"city\": \"Waukesha\",\n          \"state\": \"Illinois\",\n          \"zip\": \"69057\",\n          \"country\": \"Sweden\",\n          \"nickName\": \"Randy Padberg\",\n          \"address2\": \"7855 Prospect Street\",\n          \"address3\": \"4929 Brekke Camp\",\n          \"phoneNumber\": \"773.891.3713 x01489\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 30,\n        \"endPage\": 70\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Wellington\",\n          \"lastName\": \"Schulist\",\n          \"address1\": \"8851 Littel Springs\",\n          \"city\": \"Delphiabury\",\n          \"state\": \"Massachusetts\",\n          \"zip\": \"89564\",\n          \"country\": \"Sierra Leone\",\n          \"nickName\": \"Laurence Gleason\",\n          \"address2\": \"429 E Church Street\",\n          \"address3\": \"949 O'Kon Crossing\",\n          \"phoneNumber\": \"1-621-896-1209\"\n        },\n        {\n          \"firstName\": \"Buster\",\n          \"lastName\": \"Kulas\",\n          \"address1\": \"3645 Johnson Point\",\n          \"city\": \"Kleinland\",\n          \"state\": \"West Virginia\",\n          \"zip\": \"03320-6686\",\n          \"country\": \"Anguilla\",\n          \"nickName\": \"Sheri Hane\",\n          \"address2\": \"772 Kirlin Squares\",\n          \"address3\": \"271 Broad Street\",\n          \"phoneNumber\": \"1-904-416-9110\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"quas\",\n      \"expirationDate\": {\n        \"month\": 536,\n        \"year\": 2016\n      },\n      \"cvv\": 409\n    }\n  },\n  \"tags\": [\n    \"adversus\",\n    \"vapulus\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"cerno\",\n  \"message\": 37,\n  \"jobId\": \"rS8zPtub4q\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json",
                  "item": []
                },
                {
                  "id": "b9ec4d70-32b6-4ec0-b433-0c6915da49b7",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-pdf-split"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"fp4IJqd5pC\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 19,\n        \"endPage\": 77\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Terrence\",\n          \"lastName\": \"Beier\",\n          \"address1\": \"4840 Heathcote Rue\",\n          \"city\": \"Koeppville\",\n          \"state\": \"Tennessee\",\n          \"zip\": \"37423-4507\",\n          \"country\": \"Maldives\",\n          \"nickName\": \"Eric Larson\",\n          \"address2\": \"4081 Macejkovic Field\",\n          \"address3\": \"18533 S Monroe Street\",\n          \"phoneNumber\": \"1-810-559-6920 x185\"\n        },\n        {\n          \"firstName\": \"Cheyenne\",\n          \"lastName\": \"Hahn\",\n          \"address1\": \"80683 Armstrong Knoll\",\n          \"city\": \"Xzavierberg\",\n          \"state\": \"Utah\",\n          \"zip\": \"70134\",\n          \"country\": \"Dominica\",\n          \"nickName\": \"Ismael Prohaska\",\n          \"address2\": \"991 Alec Crossroad\",\n          \"address3\": \"64962 Alma Street\",\n          \"phoneNumber\": \"1-355-890-2327 x1343\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 61,\n        \"endPage\": 50\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Erica\",\n          \"lastName\": \"Schamberger\",\n          \"address1\": \"437 Eduardo Meadows\",\n          \"city\": \"Youngstown\",\n          \"state\": \"Montana\",\n          \"zip\": \"95010\",\n          \"country\": \"Iraq\",\n          \"nickName\": \"Casey Wilkinson\",\n          \"address2\": \"47173 Rusty Trafficway\",\n          \"address3\": \"91280 Rogahn Well\",\n          \"phoneNumber\": \"(580) 672-7612 x0071\"\n        },\n        {\n          \"firstName\": \"Diamond\",\n          \"lastName\": \"Boyle\",\n          \"address1\": \"330 Madaline Village\",\n          \"city\": \"Margaritastad\",\n          \"state\": \"Missouri\",\n          \"zip\": \"81148\",\n          \"country\": \"Papua New Guinea\",\n          \"nickName\": \"Lela Bernhard\",\n          \"address2\": \"907 Denesik Expressway\",\n          \"address3\": \"31398 Riverside\",\n          \"phoneNumber\": \"1-946-283-6739 x177\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"tabesco\",\n      \"expirationDate\": {\n        \"month\": 521,\n        \"year\": 2018\n      },\n      \"cvv\": 255\n    }\n  },\n  \"tags\": [\n    \"celebrer\",\n    \"admitto\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                },
                {
                  "id": "3f8c4909-63ea-4e57-83d0-c9de2e560790",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-pdf-split"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"YxTP8pHZQp\",\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 46,\n        \"endPage\": 32\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Haskell\",\n          \"lastName\": \"Hammes\",\n          \"address1\": \"289 Dickens Rapids\",\n          \"city\": \"South Salvatore\",\n          \"state\": \"Mississippi\",\n          \"zip\": \"90928-6169\",\n          \"country\": \"Iceland\",\n          \"nickName\": \"Leticia Ortiz\",\n          \"address2\": \"964 Teagan Wells\",\n          \"address3\": \"544 D'Amore Motorway\",\n          \"phoneNumber\": \"1-973-680-9864 x0934\"\n        },\n        {\n          \"firstName\": \"Mitchell\",\n          \"lastName\": \"Medhurst\",\n          \"address1\": \"9002 Monroe Street\",\n          \"city\": \"Jerrodstead\",\n          \"state\": \"Minnesota\",\n          \"zip\": \"66251\",\n          \"country\": \"Trinidad and Tobago\",\n          \"nickName\": \"Patricia Upton\",\n          \"address2\": \"52917 Casimer Rue\",\n          \"address3\": \"40851 Jacobi Ridge\",\n          \"phoneNumber\": \"388.240.9656 x0935\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 25,\n        \"endPage\": 64\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Thalia\",\n          \"lastName\": \"Hahn\",\n          \"address1\": \"87115 Treva Cliffs\",\n          \"city\": \"Maceyhaven\",\n          \"state\": \"Kansas\",\n          \"zip\": \"73671-0636\",\n          \"country\": \"Estonia\",\n          \"nickName\": \"Ted Schmeler\",\n          \"address2\": \"3881 W Main Street\",\n          \"address3\": \"574 Tennyson Road\",\n          \"phoneNumber\": \"651.725.7706\"\n        },\n        {\n          \"firstName\": \"Sandrine\",\n          \"lastName\": \"Friesen\",\n          \"address1\": \"2393 Douglas Meadow\",\n          \"city\": \"Maechester\",\n          \"state\": \"Georgia\",\n          \"zip\": \"57826-9921\",\n          \"country\": \"Latvia\",\n          \"nickName\": \"Tracy Ledner\",\n          \"address2\": \"757 Rosenbaum Junctions\",\n          \"address3\": \"8185 Ebony Branch\",\n          \"phoneNumber\": \"543-374-5250\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"discover\",\n      \"cardNumber\": \"cunabula\",\n      \"expirationDate\": {\n        \"month\": 422,\n        \"year\": 2016\n      },\n      \"cvv\": 324\n    }\n  },\n  \"tags\": [\n    \"conduco\",\n    \"caput\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "single-pdf-split-addressCapture",
          "description": "",
          "item": [
            {
              "id": "eab3255b-3a55-4c7d-a218-c0081fbbc06d",
              "name": "Operation for /jobs/single-pdf-split-addressCapture",
              "request": {
                "name": "Operation for /jobs/single-pdf-split-addressCapture",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-pdf-split-addressCapture"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [],
                  "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture"
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": \"vhfj7WD8wi\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 37,\n      \"endPage\": 49,\n      \"addressRegion\": {\n        \"x\": 922.25,\n        \"y\": 594.33,\n        \"width\": \"BmJxMWqeWQ\",\n        \"height\": 368.37,\n        \"pageOffset\": 46\n      }\n    },\n    {\n      \"startPage\": 64,\n      \"endPage\": 78,\n      \"addressRegion\": {\n        \"x\": 414.54,\n        \"y\": 408.11,\n        \"width\": \"vxSms122cV\",\n        \"height\": 593.16,\n        \"pageOffset\": 35\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"iste\",\n      \"expirationDate\": {\n        \"month\": 844,\n        \"year\": 2023\n      },\n      \"cvv\": 171\n    }\n  },\n  \"tags\": [\n    \"constans\",\n    \"substantia\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null,
                "item": []
              },
              "response": [
                {
                  "id": "aede65bc-3bdf-4d47-b713-fbd5f208eefc",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split-addressCapture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"aSArfvHMHe\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 68,\n      \"endPage\": 38,\n      \"addressRegion\": {\n        \"x\": 728.84,\n        \"y\": 210.79,\n        \"width\": \"x661BhCRG2\",\n        \"height\": 815.44,\n        \"pageOffset\": 70\n      }\n    },\n    {\n      \"startPage\": 18,\n      \"endPage\": 73,\n      \"addressRegion\": {\n        \"x\": 193.22,\n        \"y\": 797.61,\n        \"width\": \"h2JiiYyyyM\",\n        \"height\": 412.24,\n        \"pageOffset\": 18\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"debeo\",\n      \"expirationDate\": {\n        \"month\": 783,\n        \"year\": 2012\n      },\n      \"cvv\": 769\n    }\n  },\n  \"tags\": [\n    \"umbra\",\n    \"sapiente\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"una\",\n  \"message\": 67,\n  \"jobId\": \"Ymil6FGcHD\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json",
                  "item": []
                },
                {
                  "id": "88cd653c-348f-4652-bef8-b881d81ab74d",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split-addressCapture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"rQE155ihkt\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 22,\n      \"endPage\": 39,\n      \"addressRegion\": {\n        \"x\": 712.36,\n        \"y\": 404.36,\n        \"width\": \"ZtZPWweTxH\",\n        \"height\": 451.55,\n        \"pageOffset\": 47\n      }\n    },\n    {\n      \"startPage\": 54,\n      \"endPage\": 59,\n      \"addressRegion\": {\n        \"x\": 466.25,\n        \"y\": 817.44,\n        \"width\": \"c6cDFeZZiL\",\n        \"height\": 121,\n        \"pageOffset\": 59\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"paulatim\",\n      \"expirationDate\": {\n        \"month\": 551,\n        \"year\": 2001\n      },\n      \"cvv\": 188\n    }\n  },\n  \"tags\": [\n    \"apud\",\n    \"amiculum\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                },
                {
                  "id": "ebdf6c5b-e4a3-4ac1-b221-362835cfb15e",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split-addressCapture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": \"vKwaPIPYT1\",\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 23,\n      \"endPage\": 64,\n      \"addressRegion\": {\n        \"x\": 232.58,\n        \"y\": 42.37,\n        \"width\": \"oNXQd7FaIt\",\n        \"height\": 533.92,\n        \"pageOffset\": 26\n      }\n    },\n    {\n      \"startPage\": 49,\n      \"endPage\": 28,\n      \"addressRegion\": {\n        \"x\": 373.68,\n        \"y\": 223.12,\n        \"width\": \"2uoZAmBVF6\",\n        \"height\": 985.14,\n        \"pageOffset\": 56\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"demens\",\n      \"expirationDate\": {\n        \"month\": 960,\n        \"year\": 2008\n      },\n      \"cvv\": 68\n    }\n  },\n  \"tags\": [\n    \"peccatus\",\n    \"soluta\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-pdf-address-capture",
          "description": "",
          "item": [
            {
              "id": "2b9cc194-458e-4d93-8383-a9632d154db8",
              "name": "Operation for /jobs/multi-pdf-address-capture",
              "request": {
                "name": "Operation for /jobs/multi-pdf-address-capture",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-pdf-address-capture"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [],
                  "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture"
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"MXlTxr0od4\",\n      \"addressListRegion\": \"7914 Daniel Forge\",\n      \"delimiter\": \"accusamus\",\n      \"tags\": [\n        \"caput\",\n        \"crustulum\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"w5jwGu7Pg9\",\n      \"addressListRegion\": \"8783 Kayla Point\",\n      \"delimiter\": \"aegre\",\n      \"tags\": [\n        \"terebro\",\n        \"tripudio\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"auctor\",\n      \"expirationDate\": {\n        \"month\": 734,\n        \"year\": 2009\n      },\n      \"cvv\": 389\n    }\n  },\n  \"tags\": [\n    \"voluptas\",\n    \"versus\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null,
                "item": []
              },
              "response": [
                {
                  "id": "61be5624-4921-41e1-af90-3d4262fef541",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-pdf-address-capture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"w1A0IyrPo7\",\n      \"addressListRegion\": \"19861 Wade Mills\",\n      \"delimiter\": \"acervus\",\n      \"tags\": [\n        \"amplitudo\",\n        \"hic\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"NLearGro6Z\",\n      \"addressListRegion\": \"75082 Rohan Rest\",\n      \"delimiter\": \"audacia\",\n      \"tags\": [\n        \"comitatus\",\n        \"abstergo\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"vorax\",\n      \"expirationDate\": {\n        \"month\": 74,\n        \"year\": 2023\n      },\n      \"cvv\": 360\n    }\n  },\n  \"tags\": [\n    \"strues\",\n    \"adflicto\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"quisquam\",\n  \"message\": 63,\n  \"jobId\": \"xllEGmKoAY\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json",
                  "item": []
                },
                {
                  "id": "ff513237-241d-4339-bfbe-48d96cb11ea9",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-pdf-address-capture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"KGiXWFv065\",\n      \"addressListRegion\": \"3890 W Lake Street\",\n      \"delimiter\": \"cruentus\",\n      \"tags\": [\n        \"adinventitias\",\n        \"certus\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"TWwPVAdLX8\",\n      \"addressListRegion\": \"2559 Willow Drive\",\n      \"delimiter\": \"in\",\n      \"tags\": [\n        \"comptus\",\n        \"aetas\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"pauper\",\n      \"expirationDate\": {\n        \"month\": 810,\n        \"year\": 2010\n      },\n      \"cvv\": 965\n    }\n  },\n  \"tags\": [\n    \"commodo\",\n    \"vir\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                },
                {
                  "id": "78bfdf99-6b30-48e5-99e4-94e4f8711d83",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-pdf-address-capture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [],
                      "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture"
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": \"azBaSB0HCW\",\n      \"addressListRegion\": \"78889 Lind Spur\",\n      \"delimiter\": \"despecto\",\n      \"tags\": [\n        \"compono\",\n        \"quisquam\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": \"yh6KBuUM7b\",\n      \"addressListRegion\": \"78242 Ruecker Street\",\n      \"delimiter\": \"vicinus\",\n      \"tags\": [\n        \"calcar\",\n        \"repudiandae\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"sperno\",\n      \"expirationDate\": {\n        \"month\": 669,\n        \"year\": 2011\n      },\n      \"cvv\": 597\n    }\n  },\n  \"tags\": [\n    \"canis\",\n    \"cernuus\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text",
                  "item": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        }
      ]
    },
    {
      "name": "auth",
      "item": [
        {
          "name": "tokens",
          "item": [
            {
              "name": "short",
              "item": [
                {
                  "name": "Issue a short-term access token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "// JWT token creation returns 201 Created",
                          "pm.test('Status code is allowed (200,201,400,401)', function () { pm.expect([200, 201, 400, 401]).to.include(pm.response.code); });",
                          "pm.test('Response time < 1s', function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                        ]
                      }
                    }
                  ],
                  "item": []
                }
              ]
            },
            {
              "name": "long",
              "item": [
                {
                  "name": "Issue or rotate a long-term token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "// JWT endpoints have different allowed status codes",
                          "pm.test('Status code is allowed (200,201,400,401,429)', function () { pm.expect([200, 201, 400, 401, 429]).to.include(pm.response.code); });",
                          "pm.test('Response time < 1s', function () { pm.expect(pm.response.responseTime).to.be.below(1000); });",
                          "",
                          "// Handle rate limiting gracefully",
                          "if (pm.response.code === 429) {",
                          "  pm.test('Rate limit response has Retry-After header', function () {",
                          "    pm.response.to.have.header('Retry-After');",
                          "  });",
                          "}"
                        ]
                      }
                    }
                  ],
                  "item": []
                }
              ]
            },
            {
              "name": "{tokenId}",
              "item": [
                {
                  "name": "revoke",
                  "item": [
                    {
                      "name": "Revoke a token",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "// JWT revoke endpoint returns 204 No Content on success, 404 for non-existent tokens",
                              "pm.test('Status code is allowed (200,204,400,401,404)', function () { pm.expect([200, 204, 400, 401, 404]).to.include(pm.response.code); });",
                              "pm.test('Response time < 1s', function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                            ]
                          }
                        }
                      ],
                      "item": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// JWT Authentication Provider for C2M API",
          "// Provider: JWT Two-Token System (Long-term + Short-term)",
          "// This script automatically manages token refresh for C2M API requests",
          "",
          "// Configuration - Set these in your Postman environment",
          "const config = {",
          "    baseUrl: pm.environment.get('baseUrl') || 'http://localhost:4010',",
          "    authUrl: pm.environment.get('authUrl') || pm.environment.get('baseUrl') || 'http://localhost:4010',",
          "    clientId: pm.environment.get('clientId'),",
          "    clientSecret: pm.environment.get('clientSecret'),",
          "    longTokenVar: 'longTermToken',",
          "    shortTokenVar: 'shortTermToken',",
          "    tokenExpiryVar: 'tokenExpiry',",
          "    tokenIdVar: 'currentTokenId'",
          "};",
          "",
          "// Helper function to check if token is expired",
          "function isTokenExpired(expiryTime) {",
          "    if (!expiryTime) return true;",
          "    const now = new Date().getTime();",
          "    const expiry = new Date(expiryTime).getTime();",
          "    const bufferTime = 60 * 1000; // 1 minute buffer",
          "    return (expiry - now) <= bufferTime;",
          "}",
          "",
          "// Helper function to get long-term token",
          "async function getLongTermToken() {",
          "    console.log('Obtaining new long-term token...');",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/long`,",
          "        method: 'POST',",
          "        header: {",
          "            'Content-Type': 'application/json',",
          "            'X-Client-Id': config.clientId",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                grant_type: 'client_credentials',",
          "                client_id: config.clientId,",
          "                client_secret: config.clientSecret,",
          "                scopes: ['jobs:submit', 'templates:read', 'tokens:revoke'],",
          "                ttl_seconds: 2592000 // 30 days",
          "            })",
          "        }",
          "    };",
          "    ",
          "    return new Promise((resolve, reject) => {",
          "        pm.sendRequest(request, (err, response) => {",
          "            if (err) {",
          "                console.error('Failed to get long-term token:', err);",
          "                reject(err);",
          "                return;",
          "            }",
          "            ",
          "            if (response.code === 200 || response.code === 201) {",
          "                const data = response.json();",
          "                pm.environment.set(config.longTokenVar, data.access_token);",
          "                pm.environment.set('longTokenId', data.token_id);",
          "                pm.environment.set('longTokenExpiry', data.expires_at);",
          "                console.log(`Long-term token obtained: ${data.token_id}`);",
          "                resolve(data.access_token);",
          "            } else {",
          "                console.error('Failed to get long-term token:', response.text());",
          "                reject(new Error(`HTTP ${response.code}: ${response.text()}`));",
          "            }",
          "        });",
          "    });",
          "}",
          "",
          "// Helper function to get short-term token",
          "async function getShortTermToken(longTermToken) {",
          "    console.log('Exchanging for short-term token...');",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/short`,",
          "        method: 'POST',",
          "        header: {",
          "            'Authorization': `Bearer ${longTermToken}`,",
          "            'Content-Type': 'application/json'",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                scopes: ['jobs:submit'] // Narrow scope for actual API calls",
          "            })",
          "        }",
          "    };",
          "    ",
          "    return new Promise((resolve, reject) => {",
          "        pm.sendRequest(request, (err, response) => {",
          "            if (err) {",
          "                console.error('Failed to get short-term token:', err);",
          "                reject(err);",
          "                return;",
          "            }",
          "            ",
          "            if (response.code === 200 || response.code === 201) {",
          "                const data = response.json();",
          "                pm.environment.set(config.shortTokenVar, data.access_token);",
          "                pm.environment.set(config.tokenExpiryVar, data.expires_at);",
          "                pm.environment.set(config.tokenIdVar, data.token_id);",
          "                console.log(`Short-term token obtained: ${data.token_id}, expires: ${data.expires_at}`);",
          "                resolve(data.access_token);",
          "            } else {",
          "                console.error('Failed to get short-term token:', response.text());",
          "                reject(new Error(`HTTP ${response.code}: ${response.text()}`));",
          "            }",
          "        });",
          "    });",
          "}",
          "",
          "// Main authentication flow",
          "async function authenticate() {",
          "    try {",
          "        // Skip auth for token endpoints",
          "        const currentPath = pm.request.url.getPath();",
          "        if (currentPath.includes('/auth/tokens/')) {",
          "            console.log('Skipping auth for token endpoint');",
          "            return;",
          "        }",
          "        ",
          "        // Check if we need client credentials",
          "        if (!config.clientId || !config.clientSecret) {",
          "            console.warn('Client credentials not configured. Set clientId and clientSecret in environment.');",
          "            return;",
          "        }",
          "        ",
          "        // Get current tokens from environment",
          "        let longTermToken = pm.environment.get(config.longTokenVar);",
          "        const shortTermToken = pm.environment.get(config.shortTokenVar);",
          "        const tokenExpiry = pm.environment.get(config.tokenExpiryVar);",
          "        ",
          "        // Check if we need to refresh tokens",
          "        if (!longTermToken) {",
          "            // No long-term token, get one",
          "            longTermToken = await getLongTermToken();",
          "        }",
          "        ",
          "        if (!shortTermToken || isTokenExpired(tokenExpiry)) {",
          "            // No short-term token or it's expired, get a new one",
          "            await getShortTermToken(longTermToken);",
          "        } else {",
          "            console.log('Using existing valid short-term token');",
          "        }",
          "        ",
          "        // Set the Authorization header with the short-term token",
          "        const currentShortToken = pm.environment.get(config.shortTokenVar);",
          "        pm.request.headers.add({",
          "            key: 'Authorization',",
          "            value: `Bearer ${currentShortToken}`",
          "        });",
          "        ",
          "        console.log('Authentication complete, Authorization header set');",
          "        ",
          "    } catch (error) {",
          "        console.error('Authentication failed:', error);",
          "        throw error;",
          "    }",
          "}",
          "",
          "// Execute authentication",
          "authenticate().catch(error => {",
          "    // Set an error variable that tests can check",
          "    pm.environment.set('authError', error.toString());",
          "    console.error('Pre-request script failed:', error);",
          "});",
          "",
          "// Utility functions for manual token management (can be called from Tests tab)",
          "pm.globals.set('revokeCurrentToken', async function() {",
          "    const tokenId = pm.environment.get(config.tokenIdVar);",
          "    const token = pm.environment.get(config.shortTokenVar);",
          "    ",
          "    if (!tokenId || !token) {",
          "        console.log('No token to revoke');",
          "        return;",
          "    }",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/${tokenId}/revoke`,",
          "        method: 'POST',",
          "        header: {",
          "            'Authorization': `Bearer ${token}`",
          "        }",
          "    };",
          "    ",
          "    pm.sendRequest(request, (err, response) => {",
          "        if (err) {",
          "            console.error('Failed to revoke token:', err);",
          "        } else if (response.code === 200 || response.code === 204) {",
          "            console.log(`Token ${tokenId} revoked successfully`);",
          "            pm.environment.unset(config.shortTokenVar);",
          "            pm.environment.unset(config.tokenExpiryVar);",
          "            pm.environment.unset(config.tokenIdVar);",
          "        } else {",
          "            console.error('Failed to revoke token:', response.text());",
          "        }",
          "    });",
          "});",
          "",
          "pm.globals.set('refreshTokens', async function() {",
          "    try {",
          "        const longTermToken = pm.environment.get(config.longTokenVar) || await getLongTermToken();",
          "        await getShortTermToken(longTermToken);",
          "        console.log('Tokens refreshed successfully');",
          "    } catch (error) {",
          "        console.error('Failed to refresh tokens:', error);",
          "    }",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "token",
      "value": "eyJhbGciOiJub25lIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTczNjI5MjEyNH0.",
      "type": "string"
    },
    {
      "key": "baseUrl",
      "value": "{{baseUrl}}",
      "type": "string"
    }
  ]
}
