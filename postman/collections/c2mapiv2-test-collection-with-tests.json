{
  "info": {
    "name": "C2mApiV2TestCollection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "auth",
      "description": "",
      "item": [
        {
          "name": "tokens",
          "description": "",
          "item": [
            {
              "name": "short",
              "description": "",
              "item": [
                {
                  "id": "f86b310d-b994-436f-99a8-dad727ac0df1",
                  "name": "Issue a short-term access token",
                  "request": {
                    "name": "Issue a short-term access token",
                    "description": {
                      "content": "Exchange a valid long-term token for a short-lived JWT (e.g., 15 minutes).\nThe long-term token must be sent in the Authorization header as `Bearer <long_token>`.\n",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "auth",
                        "tokens",
                        "short"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"long_token\": \"basic\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{bearerToken}}"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "56cc06ed-75e2-44cc-83bc-a7a4dfeb59c1",
                      "name": "Short-term token issued",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"primary\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"token_type\": \"Bearer\",\n  \"access_token\": \"primary\",\n  \"expires_in\": \"standard\",\n  \"expires_at\": \"<dateTime>\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"token_id\": \"qlaQjyg6ss\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "e5c12e60-35b0-4cae-9a30-57d7e7cd8067",
                      "name": "Bad request",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"default\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"primary\",\n  \"message\": \"Job created successfully\",\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "e40233f7-8c76-403f-8933-406c75d79bc8",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"primary\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"default\",\n  \"message\": \"Request processed\",\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "5f489223-e155-4982-9df6-281cdda7bd20",
                      "name": "Too Many Requests",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "short"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"long_token\": \"standard\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"basic\",\n  \"message\": \"Processing your request\",\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                          "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                        ]
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ]
            },
            {
              "name": "long",
              "description": "",
              "item": [
                {
                  "id": "c5e39ab3-4945-4c81-ac0b-8c93164e71c6",
                  "name": "Issue or rotate a long-term token",
                  "request": {
                    "name": "Issue or rotate a long-term token",
                    "description": {
                      "content": "Issues a long-term token (e.g., 30-90 days) for automation or server-to-server use.\nRequires step-up authentication. Choose one of the supported grant types:\n\n- `client_credentials` + `client_secret`\n- `client_credentials` + one-time `otp_code`\n- `assertion` (e.g., signed JWT by your private key)\n- Or an existing short-term token with the `tokens:write` scope\n\nOnly one mechanism is required per call.\n",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "auth",
                        "tokens",
                        "long"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"grant_type\": \"assertion\",\n  \"client_id\": \"8TYVNBcojg\",\n  \"client_secret\": \"standard\",\n  \"otp_code\": \"basic\",\n  \"assertion_type\": \"primary\",\n  \"assertion\": \"default\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl_seconds\": \"basic\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{bearerToken}}"
                        }
                      ]
                    }
                  },
                  "response": [
                    {
                      "id": "b7b7ca2d-0aa8-4d4e-bd5c-eb60d51fe361",
                      "name": "Long-term token issued",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"assertion\",\n  \"client_id\": \"RqpN6sKYCG\",\n  \"client_secret\": \"default\",\n  \"otp_code\": \"default\",\n  \"assertion_type\": \"primary\",\n  \"assertion\": \"default\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl_seconds\": \"standard\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Created",
                      "code": 201,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        },
                        {
                          "disabled": false,
                          "description": {
                            "content": "Server-generated identifier for revocation and audit",
                            "type": "text/plain"
                          },
                          "key": "X-Token-Id",
                          "value": "<string>"
                        }
                      ],
                      "body": "{\n  \"token_type\": \"Bearer\",\n  \"access_token\": \"default\",\n  \"expires_in\": \"default\",\n  \"expires_at\": \"<dateTime>\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"token_id\": \"K55tLK0oIU\"\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "f674a4de-a4ad-4eb2-956b-aee24d832c10",
                      "name": "Bad request",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"assertion\",\n  \"client_id\": \"nzzT4kP13Q\",\n  \"client_secret\": \"basic\",\n  \"otp_code\": \"basic\",\n  \"assertion_type\": \"standard\",\n  \"assertion\": \"standard\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl_seconds\": \"primary\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"standard\",\n  \"message\": \"Request processed\",\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "212979ce-d417-4439-a1b0-a717cd4e54d6",
                      "name": "Unauthorized",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"assertion\",\n  \"client_id\": \"k4vOORB6ga\",\n  \"client_secret\": \"standard\",\n  \"otp_code\": \"primary\",\n  \"assertion_type\": \"standard\",\n  \"assertion\": \"default\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl_seconds\": \"primary\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"primary\",\n  \"message\": \"Request processed\",\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "ceca47ab-c897-4c64-b753-7933b53bfb32",
                      "name": "Forbidden",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"assertion\",\n  \"client_id\": \"dxXLSuW99L\",\n  \"client_secret\": \"default\",\n  \"otp_code\": \"standard\",\n  \"assertion_type\": \"basic\",\n  \"assertion\": \"default\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl_seconds\": \"basic\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"primary\",\n  \"message\": \"Job created successfully\",\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    },
                    {
                      "id": "8a3e7a51-8140-4a94-8f81-5d0970e70ba0",
                      "name": "Too Many Requests",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            "long"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "description": {
                              "content": "Added as a part of security scheme: bearer",
                              "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Bearer <token>"
                          }
                        ],
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"grant_type\": \"assertion\",\n  \"client_id\": \"OR59RMOYAL\",\n  \"client_secret\": \"basic\",\n  \"otp_code\": \"default\",\n  \"assertion_type\": \"primary\",\n  \"assertion\": \"basic\",\n  \"scopes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"ttl_seconds\": \"basic\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        }
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n  \"code\": \"default\",\n  \"message\": \"Operation completed successfully\",\n  \"details\": {}\n}",
                      "cookie": [],
                      "_postman_previewlanguage": "json"
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                          "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                        ]
                      }
                    }
                  ],
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  }
                }
              ]
            },
            {
              "name": "{tokenId}",
              "description": "",
              "item": [
                {
                  "name": "revoke",
                  "description": "",
                  "item": [
                    {
                      "id": "70169152-d85f-434e-be26-f2cc0c66b0c5",
                      "name": "Revoke a token",
                      "request": {
                        "name": "Revoke a token",
                        "description": {
                          "content": "Revokes a short- or long-term token by its `tokenId`. Idempotent.",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "auth",
                            "tokens",
                            ":tokenId",
                            "revoke"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "value": "<string>",
                              "key": "tokenId",
                              "disabled": false,
                              "description": {
                                "content": "(Required) The token ID to revoke",
                                "type": "text/plain"
                              }
                            }
                          ]
                        },
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "method": "POST",
                        "body": {},
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{bearerToken}}"
                            }
                          ]
                        }
                      },
                      "response": [
                        {
                          "id": "46c51562-d10e-488c-8764-619fe829f42b",
                          "name": "Revoked (idempotent)",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "auth",
                                "tokens",
                                ":tokenId",
                                "revoke"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": []
                            },
                            "header": [
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: bearer",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "method": "POST",
                            "body": {}
                          },
                          "status": "No Content",
                          "code": 204,
                          "header": [],
                          "cookie": [],
                          "_postman_previewlanguage": "text"
                        },
                        {
                          "id": "e9d894eb-dbbd-43ad-b44c-91af256ff27b",
                          "name": "Unauthorized",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "auth",
                                "tokens",
                                ":tokenId",
                                "revoke"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": []
                            },
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: bearer",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "method": "POST",
                            "body": {}
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"code\": \"standard\",\n  \"message\": \"Operation completed successfully\",\n  \"details\": {}\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        },
                        {
                          "id": "980a8056-657e-42d0-b5f4-e1fe914d29fd",
                          "name": "Not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "auth",
                                "tokens",
                                ":tokenId",
                                "revoke"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": []
                            },
                            "header": [
                              {
                                "key": "Accept",
                                "value": "application/json"
                              },
                              {
                                "description": {
                                  "content": "Added as a part of security scheme: bearer",
                                  "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Bearer <token>"
                              }
                            ],
                            "method": "POST",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n  \"code\": \"default\",\n  \"message\": \"Job created successfully\",\n  \"details\": {}\n}",
                          "cookie": [],
                          "_postman_previewlanguage": "json"
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                              "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                            ]
                          }
                        }
                      ],
                      "protocolProfileBehavior": {
                        "disableBodyPruning": true
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "jobs",
      "description": "",
      "item": [
        {
          "name": "single-doc-job-template",
          "description": "",
          "item": [
            {
              "id": "983dc2c5-1ff7-45ca-a6ce-259853c0e074",
              "name": "Operation for /jobs/single-doc-job-template",
              "request": {
                "name": "Operation for /jobs/single-doc-job-template",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"jobTemplate\": \"template_lAikmB8H\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"documentSourceIdentifier\": {\n    \"documentId\": 1234\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "b517243c-7911-43ca-8cb0-72f4b11dccc7",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jobTemplate\": \"template_G4kfY1gG\",\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"INV-2024-001\",\n      \"amountDue\": 150\n    }\n  },\n  \"documentSourceIdentifier\": {\n    \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"active\",\n  \"message\": \"Processing your request\",\n  \"jobId\": \"BrfMzP8RCz\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "d27bccda-5007-41d8-b554-986689f52c70",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jobTemplate\": \"template_a2LLESuA\",\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 100,\n    \"documentName\": \"invoice_2024_01.pdf\"\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "4b689e94-860a-4d32-8e99-2e0aa0d4ecc6",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"jobTemplate\": \"template_OoloCctr\",\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50\n    }\n  },\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 200,\n    \"zipId\": 10,\n    \"documentName\": \"statement_jan.pdf\"\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-docs-job-template",
          "description": "",
          "item": [
            {
              "id": "64251874-80e8-4fd9-a580-8f5777ea2da8",
              "name": "Operation for /jobs/multi-docs-job-template",
              "request": {
                "name": "Operation for /jobs/multi-docs-job-template",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-docs-job-template"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"zipId\": 20,\n        \"documentName\": \"report_q1_2024.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 5000\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"documentId\": 1234\n      },\n      \"recipientAddressSource\": {\n        \"addressListId\": 100\n      }\n    }\n  ],\n  \"jobTemplate\": \"template_xnfH5Hjr\",\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "b1a81e43-10da-4534-b744-2e70ccbd9606",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-docs-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n      },\n      \"recipientAddressSource\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"address1\": \"123 Main Street\",\n        \"address2\": \"Apt 4B\",\n        \"address3\": \"\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"zip\": \"10001\",\n        \"country\": \"USA\",\n        \"nickName\": \"Johnny\",\n        \"phoneNumber\": \"+1-555-123-4567\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_2024_01.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 5000\n      }\n    }\n  ],\n  \"jobTemplate\": \"template_3hqcSjd2\",\n  \"paymentDetails\": {\n    \"googlePayDetails\": {\n      \"googlePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"completed\",\n  \"message\": \"Processing your request\",\n  \"jobId\": \"1r2PFph0w4\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "9c78060e-31ea-4881-8007-fadb83732f1a",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-docs-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 200,\n        \"zipId\": 10,\n        \"documentName\": \"statement_jan.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressListId\": 100\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"zipId\": 20,\n        \"documentName\": \"report_q1_2024.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"address1\": \"123 Main Street\",\n        \"address2\": \"Apt 4B\",\n        \"address3\": \"\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"zip\": \"10001\",\n        \"country\": \"USA\",\n        \"nickName\": \"Johnny\",\n        \"phoneNumber\": \"+1-555-123-4567\"\n      }\n    }\n  ],\n  \"jobTemplate\": \"template_jlPmW7aA\",\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "aa8af710-6cad-4cde-8f38-66406bc98f37",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-docs-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"documentId\": 1234\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 5000\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n      },\n      \"recipientAddressSource\": {\n        \"addressListId\": 100\n      }\n    }\n  ],\n  \"jobTemplate\": \"template_nXFmrNls\",\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"INV-2024-001\",\n      \"amountDue\": 150\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-doc-merge-job-template",
          "description": "",
          "item": [
            {
              "id": "d356ff24-ff64-4082-b425-2d0c83450d3e",
              "name": "Operation for /jobs/multi-doc-merge-job-template",
              "request": {
                "name": "Operation for /jobs/multi-doc-merge-job-template",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-doc-merge-job-template"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": \"j01vonrSZz\"\n    },\n    {\n      \"documentId\": \"kNsBCXE1TO\"\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"address1\": \"123 Main Street\",\n    \"address2\": \"Apt 4B\",\n    \"address3\": \"\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zip\": \"10001\",\n    \"country\": \"USA\",\n    \"nickName\": \"Johnny\",\n    \"phoneNumber\": \"+1-555-123-4567\"\n  },\n  \"jobTemplate\": \"template_Q3dahlf2\",\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "3510789b-cbb5-4bbe-aa6c-948a9831abb2",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": \"PZkQxYyAqu\"\n    },\n    {\n      \"documentId\": \"okVA8adGml\"\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"addressId\": 5000\n  },\n  \"jobTemplate\": \"template_drrGS3q4\",\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"processing\",\n  \"message\": \"Request processed\",\n  \"jobId\": \"1mrVKPf7Ma\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "76b37ab6-cd31-4cdb-8fb7-f1696527fae5",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": \"TYsur6hqJz\"\n    },\n    {\n      \"documentId\": \"bElDFF5SSN\"\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"addressListId\": 100\n  },\n  \"jobTemplate\": \"template_QwaAmyCk\",\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "4ed5f169-d46a-4a47-ab5e-44e3f045572a",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge-job-template"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": \"jR1PA3heVD\"\n    },\n    {\n      \"documentId\": \"NWnqbxxfMI\"\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"address1\": \"123 Main Street\",\n    \"address2\": \"Apt 4B\",\n    \"address3\": \"\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zip\": \"10001\",\n    \"country\": \"USA\",\n    \"nickName\": \"Johnny\",\n    \"phoneNumber\": \"+1-555-123-4567\"\n  },\n  \"jobTemplate\": \"template_ufn0fH0z\",\n  \"paymentDetails\": {\n    \"googlePayDetails\": {\n      \"googlePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "single-doc",
          "description": "",
          "item": [
            {
              "id": "1c8a9c23-49a2-40f2-95c7-2fce4b14d6e8",
              "name": "Operation for /jobs/single-doc",
              "request": {
                "name": "Operation for /jobs/single-doc",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-doc"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 100,\n    \"documentName\": \"invoice_2024_01.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Tina\",\n      \"lastName\": \"Feeney\",\n      \"address1\": \"7348 N Main\",\n      \"city\": \"Scotfurt\",\n      \"state\": \"Montana\",\n      \"zip\": \"57091\",\n      \"country\": \"Bolivia\",\n      \"nickName\": \"Edna Haley\",\n      \"address2\": \"95093 Aaliyah Point\",\n      \"address3\": \"4372 Windler Island\",\n      \"phoneNumber\": \"1-761-323-7985 x6747\"\n    },\n    {\n      \"firstName\": \"Kelli\",\n      \"lastName\": \"Roberts\",\n      \"address1\": \"9029 W High Street\",\n      \"city\": \"North Eloisaberg\",\n      \"state\": \"Arizona\",\n      \"zip\": \"74099\",\n      \"country\": \"French Polynesia\",\n      \"nickName\": \"Dr. Leslie Green\",\n      \"address2\": \"19326 Tower Road\",\n      \"address3\": \"8286 Clyde Forks\",\n      \"phoneNumber\": \"(219) 805-7276 x10636\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "862ceb16-80ec-4e1c-965e-254fce9b8b6e",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 200,\n    \"zipId\": 10,\n    \"documentName\": \"statement_jan.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Keyon\",\n      \"lastName\": \"Wisozk\",\n      \"address1\": \"636 VonRueden Ridge\",\n      \"city\": \"Odessa\",\n      \"state\": \"Wisconsin\",\n      \"zip\": \"63627-7579\",\n      \"country\": \"Poland\",\n      \"nickName\": \"Percy Leuschke-Hammes\",\n      \"address2\": \"720 Stanley Street\",\n      \"address3\": \"99534 Concepcion Harbors\",\n      \"phoneNumber\": \"671.213.4095 x62550\"\n    },\n    {\n      \"firstName\": \"Hazle\",\n      \"lastName\": \"Hagenes\",\n      \"address1\": \"956 Jettie Circles\",\n      \"city\": \"East Gretchenhaven\",\n      \"state\": \"Rhode Island\",\n      \"zip\": \"58430\",\n      \"country\": \"Monaco\",\n      \"nickName\": \"Marion Bode\",\n      \"address2\": \"5219 Lincoln Avenue\",\n      \"address3\": \"36360 W Church Street\",\n      \"phoneNumber\": \"444-227-1524\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"INV-2024-001\",\n      \"amountDue\": 150\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"active\",\n  \"message\": \"Processing your request\",\n  \"jobId\": \"4mYBlEdWuC\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "15b93a84-5fb7-4236-9fbf-ad9d4080b064",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": {\n    \"zipId\": 20,\n    \"documentName\": \"report_q1_2024.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Salvador\",\n      \"lastName\": \"Hermiston\",\n      \"address1\": \"6312 Lee Street\",\n      \"city\": \"Palm Harbor\",\n      \"state\": \"Montana\",\n      \"zip\": \"84655-6734\",\n      \"country\": \"Macao\",\n      \"nickName\": \"Travis Lesch\",\n      \"address2\": \"828 Turner Club\",\n      \"address3\": \"35938 Bath Road\",\n      \"phoneNumber\": \"512.887.1192 x795\"\n    },\n    {\n      \"firstName\": \"Jedediah\",\n      \"lastName\": \"Lemke\",\n      \"address1\": \"341 Hadley Alley\",\n      \"city\": \"Nashville-Davidson\",\n      \"state\": \"California\",\n      \"zip\": \"79643-6821\",\n      \"country\": \"Cote d'Ivoire\",\n      \"nickName\": \"Mattie Emard-Schamberger\",\n      \"address2\": \"2863 Jarod Avenue\",\n      \"address3\": \"1823 Cristal Gardens\",\n      \"phoneNumber\": \"744.712.0895 x8594\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "1568aa6d-5a8e-47c1-b2c0-405511be5c5c",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": {\n    \"documentId\": 1234\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"Cynthia\",\n      \"lastName\": \"Koss\",\n      \"address1\": \"732 Rowe Terrace\",\n      \"city\": \"Lloydview\",\n      \"state\": \"Illinois\",\n      \"zip\": \"56239\",\n      \"country\": \"Virgin Islands, U.S.\",\n      \"nickName\": \"Katrina Douglas\",\n      \"address2\": \"1174 N Water Street\",\n      \"address3\": \"49424 Oxford Street\",\n      \"phoneNumber\": \"1-489-840-5656\"\n    },\n    {\n      \"firstName\": \"Chloe\",\n      \"lastName\": \"Nienow\",\n      \"address1\": \"6876 Cecilia Village\",\n      \"city\": \"New Tracy\",\n      \"state\": \"South Dakota\",\n      \"zip\": \"89249-4624\",\n      \"country\": \"El Salvador\",\n      \"nickName\": \"Jack Bins\",\n      \"address2\": \"96075 Sherwood Heights\",\n      \"address3\": \"3373 Koss Spurs\",\n      \"phoneNumber\": \"288-423-3966 x102\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-doc",
          "description": "",
          "item": [
            {
              "id": "8193b97f-2e18-4494-8e4a-81a3a1bd87d1",
              "name": "Operation for /jobs/multi-doc",
              "request": {
                "name": "Operation for /jobs/multi-doc",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-doc"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 5000\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_2024_01.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressListId\": 100\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"none\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "63884063-94d8-4dcd-aa9c-2dbfbcf15eb5",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 200,\n        \"zipId\": 10,\n        \"documentName\": \"statement_jan.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"address1\": \"123 Main Street\",\n        \"address2\": \"Apt 4B\",\n        \"address3\": \"\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"zip\": \"10001\",\n        \"country\": \"USA\",\n        \"nickName\": \"Johnny\",\n        \"phoneNumber\": \"+1-555-123-4567\"\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"zipId\": 20,\n        \"documentName\": \"report_q1_2024.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 5000\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"none\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"googlePayDetails\": {\n      \"googlePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"processing\",\n  \"message\": \"Operation completed successfully\",\n  \"jobId\": \"rvW1ma1DBa\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "9aacbf75-2b9b-4175-bf4a-6b808a5f10dd",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"documentId\": 1234\n      },\n      \"recipientAddressSource\": {\n        \"addressListId\": 100\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n      },\n      \"recipientAddressSource\": {\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"address1\": \"123 Main Street\",\n        \"address2\": \"Apt 4B\",\n        \"address3\": \"\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"zip\": \"10001\",\n        \"country\": \"USA\",\n        \"nickName\": \"Johnny\",\n        \"phoneNumber\": \"+1-555-123-4567\"\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"none\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "b0249667-3d75-4a28-af32-16af5abc447a",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_2024_01.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 5000\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 200,\n        \"zipId\": 10,\n        \"documentName\": \"statement_jan.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressListId\": 100\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"none\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"INV-2024-001\",\n      \"amountDue\": 150\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-doc-merge",
          "description": "",
          "item": [
            {
              "id": "bd0c44fe-f8e5-44e0-9a87-710bf74225f0",
              "name": "Operation for /jobs/multi-doc-merge",
              "request": {
                "name": "Operation for /jobs/multi-doc-merge",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-doc-merge"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": \"UukqSJT0Oi\"\n    },\n    {\n      \"documentId\": \"SNWNYdr2m8\"\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"address1\": \"123 Main Street\",\n    \"address2\": \"Apt 4B\",\n    \"address3\": \"\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zip\": \"10001\",\n    \"country\": \"USA\",\n    \"nickName\": \"Johnny\",\n    \"phoneNumber\": \"+1-555-123-4567\"\n  },\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "2cef003c-b266-4a49-a2d8-3e64a8710532",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": \"Ae0NuuwzOW\"\n    },\n    {\n      \"documentId\": \"MEdkt5VBi2\"\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"addressId\": 5000\n  },\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"processing\",\n  \"message\": \"Processing your request\",\n  \"jobId\": \"4SWF5EF2ec\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "930e5eef-83e7-4f09-b34f-8df895b7b4b5",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": \"GVz53Bbxwa\"\n    },\n    {\n      \"documentId\": \"N8MBtIYAIj\"\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"addressListId\": 100\n  },\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "f40bac92-5e52-452a-8596-7b573f4deab6",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-doc-merge"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": \"jjgSbxGJS8\"\n    },\n    {\n      \"documentId\": \"TtiiDSfk5H\"\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"address1\": \"123 Main Street\",\n    \"address2\": \"Apt 4B\",\n    \"address3\": \"\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zip\": \"10001\",\n    \"country\": \"USA\",\n    \"nickName\": \"Johnny\",\n    \"phoneNumber\": \"+1-555-123-4567\"\n  },\n  \"paymentDetails\": {\n    \"googlePayDetails\": {\n      \"googlePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "single-pdf-split",
          "description": "",
          "item": [
            {
              "id": "2f2dd1b2-556e-4c64-afaa-8c973c6a5405",
              "name": "Operation for /jobs/single-pdf-split",
              "request": {
                "name": "Operation for /jobs/single-pdf-split",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-pdf-split"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"zipId\": 20,\n    \"documentName\": \"report_q1_2024.pdf\"\n  },\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": \"default\",\n        \"endPage\": \"primary\"\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Aaliyah\",\n          \"lastName\": \"Krajcik\",\n          \"address1\": \"5521 Cherry Tree Close\",\n          \"city\": \"Minnieboro\",\n          \"state\": \"Alaska\",\n          \"zip\": \"71473-8878\",\n          \"country\": \"Turkey\",\n          \"nickName\": \"Victoria Stroman\",\n          \"address2\": \"2441 The Square\",\n          \"address3\": \"1296 Kameron Cape\",\n          \"phoneNumber\": \"(963) 948-8583 x121\"\n        },\n        {\n          \"firstName\": \"Irwin\",\n          \"lastName\": \"Kutch\",\n          \"address1\": \"85568 Elinore Creek\",\n          \"city\": \"New Louveniaburgh\",\n          \"state\": \"Wisconsin\",\n          \"zip\": \"85167-6896\",\n          \"country\": \"Azerbaijan\",\n          \"nickName\": \"Roland Schumm\",\n          \"address2\": \"51110 Ruecker Shores\",\n          \"address3\": \"7514 Vladimir Route\",\n          \"phoneNumber\": \"331.778.6466 x4664\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": \"primary\",\n        \"endPage\": \"standard\"\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Wendell\",\n          \"lastName\": \"Hickle\",\n          \"address1\": \"325 Weldon Crossroad\",\n          \"city\": \"Howeland\",\n          \"state\": \"Nevada\",\n          \"zip\": \"11634\",\n          \"country\": \"Greenland\",\n          \"nickName\": \"Claire Skiles Jr.\",\n          \"address2\": \"22290 Derwent Close\",\n          \"address3\": \"71966 Gayle Flats\",\n          \"phoneNumber\": \"203.313.3618 x350\"\n        },\n        {\n          \"firstName\": \"Jacques\",\n          \"lastName\": \"Schmidt\",\n          \"address1\": \"91315 Leon Port\",\n          \"city\": \"Gutkowskistead\",\n          \"state\": \"Indiana\",\n          \"zip\": \"78937-8293\",\n          \"country\": \"Sao Tome and Principe\",\n          \"nickName\": \"Miss Louise Schiller\",\n          \"address2\": \"81608 Bill Alley\",\n          \"address3\": \"56399 Third Avenue\",\n          \"phoneNumber\": \"1-670-496-5438\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "48692d31-56c6-46df-adcb-7346e983f483",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": {\n    \"documentId\": 1234\n  },\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": \"primary\",\n        \"endPage\": \"standard\"\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Albertha\",\n          \"lastName\": \"Oberbrunner\",\n          \"address1\": \"870 Elody Forges\",\n          \"city\": \"Fort Anika\",\n          \"state\": \"Florida\",\n          \"zip\": \"93446-6699\",\n          \"country\": \"Svalbard & Jan Mayen Islands\",\n          \"nickName\": \"Brett Lind\",\n          \"address2\": \"4703 Wren Close\",\n          \"address3\": \"29750 Franklin Road\",\n          \"phoneNumber\": \"(386) 211-3513\"\n        },\n        {\n          \"firstName\": \"Angelita\",\n          \"lastName\": \"Okuneva\",\n          \"address1\": \"343 N Union Street\",\n          \"city\": \"Mullerstad\",\n          \"state\": \"New Hampshire\",\n          \"zip\": \"90252-9492\",\n          \"country\": \"Saint Kitts and Nevis\",\n          \"nickName\": \"Colleen Cruickshank\",\n          \"address2\": \"522 Woodlands Avenue\",\n          \"address3\": \"68650 Edyth Fords\",\n          \"phoneNumber\": \"1-272-740-3946\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": \"standard\",\n        \"endPage\": \"standard\"\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Mohamed\",\n          \"lastName\": \"Kovacek\",\n          \"address1\": \"7616 S 5th Street\",\n          \"city\": \"Austenworth\",\n          \"state\": \"Washington\",\n          \"zip\": \"62591-7243\",\n          \"country\": \"Finland\",\n          \"nickName\": \"Rufus Keeling\",\n          \"address2\": \"85538 W Bridge Street\",\n          \"address3\": \"2523 Quarry Lane\",\n          \"phoneNumber\": \"(738) 547-8010 x37394\"\n        },\n        {\n          \"firstName\": \"Viola\",\n          \"lastName\": \"Langosh\",\n          \"address1\": \"49103 Stracke Village\",\n          \"city\": \"West Des Moines\",\n          \"state\": \"Missouri\",\n          \"zip\": \"49253-9457\",\n          \"country\": \"Tonga\",\n          \"nickName\": \"Minnie Purdy\",\n          \"address2\": \"69426 Blick Fork\",\n          \"address3\": \"823 Oliver Prairie\",\n          \"phoneNumber\": \"286-290-6479 x909\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"INV-2024-001\",\n      \"amountDue\": 150\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"success\",\n  \"message\": \"Operation completed successfully\",\n  \"jobId\": \"L92Y2GAfXl\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "b4db9560-b383-49f2-bec9-938b4de7bdaf",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": {\n    \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n  },\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": \"standard\",\n        \"endPage\": \"standard\"\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Eleonore\",\n          \"lastName\": \"Emard\",\n          \"address1\": \"573 Lafayette Street\",\n          \"city\": \"Bednarcester\",\n          \"state\": \"Alaska\",\n          \"zip\": \"10182\",\n          \"country\": \"Angola\",\n          \"nickName\": \"Tammy Kautzer\",\n          \"address2\": \"1466 Gibson Court\",\n          \"address3\": \"589 Ondricka Flats\",\n          \"phoneNumber\": \"581-901-5237 x84768\"\n        },\n        {\n          \"firstName\": \"Calista\",\n          \"lastName\": \"Klein\",\n          \"address1\": \"8173 Trantow Route\",\n          \"city\": \"Fort Dessietown\",\n          \"state\": \"Virginia\",\n          \"zip\": \"23205\",\n          \"country\": \"Martinique\",\n          \"nickName\": \"Lula Miller\",\n          \"address2\": \"844 Hoppe Rapid\",\n          \"address3\": \"429 Boehm Groves\",\n          \"phoneNumber\": \"973-658-6631\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": \"default\",\n        \"endPage\": \"standard\"\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Madilyn\",\n          \"lastName\": \"Kemmer\",\n          \"address1\": \"676 Gulgowski Place\",\n          \"city\": \"Ernestineworth\",\n          \"state\": \"Colorado\",\n          \"zip\": \"55711-4111\",\n          \"country\": \"Republic of Korea\",\n          \"nickName\": \"Doyle Hessel\",\n          \"address2\": \"81230 Marietta Fields\",\n          \"address3\": \"209 Batz Falls\",\n          \"phoneNumber\": \"911.946.6045 x194\"\n        },\n        {\n          \"firstName\": \"Whitney\",\n          \"lastName\": \"Harber-Haley\",\n          \"address1\": \"3618 Raoul Stravenue\",\n          \"city\": \"Valliefurt\",\n          \"state\": \"Georgia\",\n          \"zip\": \"05863\",\n          \"country\": \"Guatemala\",\n          \"nickName\": \"Juana Schiller\",\n          \"address2\": \"30949 Wolf Manor\",\n          \"address3\": \"45051 Billie Glen\",\n          \"phoneNumber\": \"721.204.7782 x4953\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "bf91f792-f313-4cc3-8666-a389ab32ab8c",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 100,\n    \"documentName\": \"invoice_2024_01.pdf\"\n  },\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": \"basic\",\n        \"endPage\": \"standard\"\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"April\",\n          \"lastName\": \"Kuphal\",\n          \"address1\": \"360 Chapel Road\",\n          \"city\": \"Lake Elroy\",\n          \"state\": \"New Mexico\",\n          \"zip\": \"00494-5999\",\n          \"country\": \"Solomon Islands\",\n          \"nickName\": \"Tami Hahn\",\n          \"address2\": \"65040 Davon Circle\",\n          \"address3\": \"74926 Juniper Close\",\n          \"phoneNumber\": \"669.239.5885\"\n        },\n        {\n          \"firstName\": \"Kellen\",\n          \"lastName\": \"McKenzie\",\n          \"address1\": \"1837 Schultz Parkways\",\n          \"city\": \"Troy\",\n          \"state\": \"Washington\",\n          \"zip\": \"30076\",\n          \"country\": \"Israel\",\n          \"nickName\": \"Gretchen Mayer\",\n          \"address2\": \"201 Nash Stream\",\n          \"address3\": \"191 O'Reilly Mount\",\n          \"phoneNumber\": \"(472) 978-0201 x1449\"\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": \"primary\",\n        \"endPage\": \"primary\"\n      },\n      \"recipientAddressSources\": [\n        {\n          \"firstName\": \"Ari\",\n          \"lastName\": \"Lockman\",\n          \"address1\": \"582 Ambrose Meadows\",\n          \"city\": \"Long Beach\",\n          \"state\": \"New Jersey\",\n          \"zip\": \"04394\",\n          \"country\": \"Croatia\",\n          \"nickName\": \"Anna Nitzsche\",\n          \"address2\": \"763 Veterans Memorial Highway\",\n          \"address3\": \"8115 Sean Brooks\",\n          \"phoneNumber\": \"700-728-7632\"\n        },\n        {\n          \"firstName\": \"Harley\",\n          \"lastName\": \"Mraz\",\n          \"address1\": \"52886 Sasha Fall\",\n          \"city\": \"New Nikita\",\n          \"state\": \"Maine\",\n          \"zip\": \"51869-0176\",\n          \"country\": \"Brazil\",\n          \"nickName\": \"Deborah Walter\",\n          \"address2\": \"47006 Cedar Avenue\",\n          \"address3\": \"43725 Holden Ridge\",\n          \"phoneNumber\": \"(440) 563-4896\"\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "single-pdf-split-addressCapture",
          "description": "",
          "item": [
            {
              "id": "7622041b-ec63-4c59-bc2a-0e31308b76d1",
              "name": "Operation for /jobs/single-pdf-split-addressCapture",
              "request": {
                "name": "Operation for /jobs/single-pdf-split-addressCapture",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "single-pdf-split-addressCapture"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 200,\n    \"zipId\": 10,\n    \"documentName\": \"statement_jan.pdf\"\n  },\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": \"standard\",\n      \"endPage\": \"standard\",\n      \"addressRegion\": {\n        \"x\": \"basic\",\n        \"y\": \"standard\",\n        \"width\": \"rKn0jgspHx\",\n        \"height\": \"primary\",\n        \"pageOffset\": \"basic\"\n      }\n    },\n    {\n      \"startPage\": \"primary\",\n      \"endPage\": \"basic\",\n      \"addressRegion\": {\n        \"x\": \"standard\",\n        \"y\": \"standard\",\n        \"width\": \"29eeNf27pm\",\n        \"height\": \"standard\",\n        \"pageOffset\": \"standard\"\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "56373bee-567c-4373-8c95-1d552e793090",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split-addressCapture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": {\n    \"zipId\": 20,\n    \"documentName\": \"report_q1_2024.pdf\"\n  },\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": \"basic\",\n      \"endPage\": \"primary\",\n      \"addressRegion\": {\n        \"x\": \"standard\",\n        \"y\": \"primary\",\n        \"width\": \"2WsplJrgHo\",\n        \"height\": \"basic\",\n        \"pageOffset\": \"standard\"\n      }\n    },\n    {\n      \"startPage\": \"primary\",\n      \"endPage\": \"primary\",\n      \"addressRegion\": {\n        \"x\": \"basic\",\n        \"y\": \"primary\",\n        \"width\": \"rcHOkCY6Tu\",\n        \"height\": \"primary\",\n        \"pageOffset\": \"default\"\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"googlePayDetails\": {\n      \"googlePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"success\",\n  \"message\": \"Request processed\",\n  \"jobId\": \"B538gcrqFb\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "01e3217b-348e-49b4-ab2d-f72f84ce4dd7",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split-addressCapture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": {\n    \"documentId\": 1234\n  },\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": \"default\",\n      \"endPage\": \"default\",\n      \"addressRegion\": {\n        \"x\": \"standard\",\n        \"y\": \"basic\",\n        \"width\": \"cnEExjrjJr\",\n        \"height\": \"basic\",\n        \"pageOffset\": \"basic\"\n      }\n    },\n    {\n      \"startPage\": \"standard\",\n      \"endPage\": \"standard\",\n      \"addressRegion\": {\n        \"x\": \"primary\",\n        \"y\": \"default\",\n        \"width\": \"BrdSVHofz8\",\n        \"height\": \"default\",\n        \"pageOffset\": \"standard\"\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "cd1981d3-aae8-4285-8691-7edf0d83c77d",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "single-pdf-split-addressCapture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"documentSourceIdentifier\": {\n    \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n  },\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": \"standard\",\n      \"endPage\": \"basic\",\n      \"addressRegion\": {\n        \"x\": \"default\",\n        \"y\": \"default\",\n        \"width\": \"dlE8C6KO7j\",\n        \"height\": \"standard\",\n        \"pageOffset\": \"primary\"\n      }\n    },\n    {\n      \"startPage\": \"standard\",\n      \"endPage\": \"standard\",\n      \"addressRegion\": {\n        \"x\": \"standard\",\n        \"y\": \"primary\",\n        \"width\": \"g0YwITLWJD\",\n        \"height\": \"standard\",\n        \"pageOffset\": \"default\"\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"INV-2024-001\",\n      \"amountDue\": 150\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        },
        {
          "name": "multi-pdf-address-capture",
          "description": "",
          "item": [
            {
              "id": "df720675-17bb-4ffa-bf73-3aa7e1f1ea95",
              "name": "Operation for /jobs/multi-pdf-address-capture",
              "request": {
                "name": "Operation for /jobs/multi-pdf-address-capture",
                "description": {},
                "url": {
                  "path": [
                    "jobs",
                    "multi-pdf-address-capture"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_2024_01.pdf\"\n      },\n      \"addressListRegion\": \"150 Bobby Dale\",\n      \"delimiter\": \"standard\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 200,\n        \"zipId\": 10,\n        \"documentName\": \"statement_jan.pdf\"\n      },\n      \"addressListRegion\": \"34472 Chestnut Grove\",\n      \"delimiter\": \"default\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "auth": null
              },
              "response": [
                {
                  "id": "a524fa41-93e6-4866-b636-532ff53597bd",
                  "name": "Success",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-pdf-address-capture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"zipId\": 20,\n        \"documentName\": \"report_q1_2024.pdf\"\n      },\n      \"addressListRegion\": \"88348 Nienow Bridge\",\n      \"delimiter\": \"default\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"documentId\": 1234\n      },\n      \"addressListRegion\": \"2306 Hazel Grove\",\n      \"delimiter\": \"default\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n  \"status\": \"success\",\n  \"message\": \"Request processed\",\n  \"jobId\": \"v7709LooKy\"\n}",
                  "cookie": [],
                  "_postman_previewlanguage": "json"
                },
                {
                  "id": "3f707c55-2e7f-41f9-b113-1031add056a7",
                  "name": "Invalid request",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-pdf-address-capture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n      },\n      \"addressListRegion\": \"928 Coronation Road\",\n      \"delimiter\": \"default\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_2024_01.pdf\"\n      },\n      \"addressListRegion\": \"2405 Carroll Lakes\",\n      \"delimiter\": \"basic\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                },
                {
                  "id": "8ed619ed-dd24-413a-b544-8cc2337b1c27",
                  "name": "Unauthorized",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "jobs",
                        "multi-pdf-address-capture"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": {
                          "content": "Added as a part of security scheme: bearer",
                          "type": "text/plain"
                        },
                        "key": "Authorization",
                        "value": "Bearer <token>"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 200,\n        \"zipId\": 10,\n        \"documentName\": \"statement_jan.pdf\"\n      },\n      \"addressListRegion\": \"690 Smitham Alley\",\n      \"delimiter\": \"standard\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"zipId\": 20,\n        \"documentName\": \"report_q1_2024.pdf\"\n      },\n      \"addressListRegion\": \"41911 Bartoletti Mountain\",\n      \"delimiter\": \"primary\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"googlePayDetails\": {\n      \"googlePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [],
                  "cookie": [],
                  "_postman_previewlanguage": "text"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is allowed (200,201,204,400,401,403,404,429)\", function () { pm.expect([200,201,204,400,401,403,404,429]).to.include(pm.response.code); });",
                      "pm.test(\"Response time < 1s\", function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                    ]
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              }
            }
          ]
        }
      ]
    },
    {
      "name": "auth",
      "item": [
        {
          "name": "tokens",
          "item": [
            {
              "name": "short",
              "item": [
                {
                  "name": "Issue a short-term access token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "// JWT token creation returns 201 Created",
                          "pm.test('Status code is allowed (200,201,400,401)', function () { pm.expect([200, 201, 400, 401]).to.include(pm.response.code); });",
                          "pm.test('Response time < 1s', function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            {
              "name": "long",
              "item": [
                {
                  "name": "Issue or rotate a long-term token",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "// JWT endpoints have different allowed status codes",
                          "pm.test('Status code is allowed (200,201,400,401,429)', function () { pm.expect([200, 201, 400, 401, 429]).to.include(pm.response.code); });",
                          "pm.test('Response time < 1s', function () { pm.expect(pm.response.responseTime).to.be.below(1000); });",
                          "",
                          "// Handle rate limiting gracefully",
                          "if (pm.response.code === 429) {",
                          "  pm.test('Rate limit response has Retry-After header', function () {",
                          "    pm.response.to.have.header('Retry-After');",
                          "  });",
                          "}"
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            {
              "name": "{tokenId}",
              "item": [
                {
                  "name": "revoke",
                  "item": [
                    {
                      "name": "Revoke a token",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "type": "text/javascript",
                            "exec": [
                              "// JWT revoke endpoint returns 204 No Content on success, 404 for non-existent tokens",
                              "pm.test('Status code is allowed (200,204,400,401,404)', function () { pm.expect([200, 204, 400, 401, 404]).to.include(pm.response.code); });",
                              "pm.test('Response time < 1s', function () { pm.expect(pm.response.responseTime).to.be.below(1000); });"
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// JWT Authentication Provider for C2M API",
          "// Provider: JWT Two-Token System (Long-term + Short-term)",
          "// This script automatically manages token refresh for C2M API requests",
          "",
          "// Configuration - Set these in your Postman environment",
          "const config = {",
          "    baseUrl: pm.environment.get('baseUrl') || 'http://localhost:4010',",
          "    authUrl: pm.environment.get('authUrl') || pm.environment.get('baseUrl') || 'http://localhost:4010',",
          "    clientId: pm.environment.get('clientId'),",
          "    clientSecret: pm.environment.get('clientSecret'),",
          "    longTokenVar: 'longTermToken',",
          "    shortTokenVar: 'shortTermToken',",
          "    tokenExpiryVar: 'tokenExpiry',",
          "    tokenIdVar: 'currentTokenId'",
          "};",
          "",
          "// Helper function to check if token is expired",
          "function isTokenExpired(expiryTime) {",
          "    if (!expiryTime) return true;",
          "    const now = new Date().getTime();",
          "    const expiry = new Date(expiryTime).getTime();",
          "    const bufferTime = 60 * 1000; // 1 minute buffer",
          "    return (expiry - now) <= bufferTime;",
          "}",
          "",
          "// Helper function to get long-term token",
          "async function getLongTermToken() {",
          "    console.log('Obtaining new long-term token...');",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/long`,",
          "        method: 'POST',",
          "        header: {",
          "            'Content-Type': 'application/json',",
          "            'X-Client-Id': config.clientId",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                grant_type: 'client_credentials',",
          "                client_id: config.clientId,",
          "                client_secret: config.clientSecret,",
          "                scopes: ['jobs:submit', 'templates:read', 'tokens:revoke'],",
          "                ttl_seconds: 2592000 // 30 days",
          "            })",
          "        }",
          "    };",
          "    ",
          "    return new Promise((resolve, reject) => {",
          "        pm.sendRequest(request, (err, response) => {",
          "            if (err) {",
          "                console.error('Failed to get long-term token:', err);",
          "                reject(err);",
          "                return;",
          "            }",
          "            ",
          "            if (response.code === 200 || response.code === 201) {",
          "                const data = response.json();",
          "                pm.environment.set(config.longTokenVar, data.access_token);",
          "                pm.environment.set('longTokenId', data.token_id);",
          "                pm.environment.set('longTokenExpiry', data.expires_at);",
          "                console.log(`Long-term token obtained: ${data.token_id}`);",
          "                resolve(data.access_token);",
          "            } else {",
          "                console.error('Failed to get long-term token:', response.text());",
          "                reject(new Error(`HTTP ${response.code}: ${response.text()}`));",
          "            }",
          "        });",
          "    });",
          "}",
          "",
          "// Helper function to get short-term token",
          "async function getShortTermToken(longTermToken) {",
          "    console.log('Exchanging for short-term token...');",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/short`,",
          "        method: 'POST',",
          "        header: {",
          "            'Authorization': `Bearer ${longTermToken}`,",
          "            'Content-Type': 'application/json'",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                scopes: ['jobs:submit'] // Narrow scope for actual API calls",
          "            })",
          "        }",
          "    };",
          "    ",
          "    return new Promise((resolve, reject) => {",
          "        pm.sendRequest(request, (err, response) => {",
          "            if (err) {",
          "                console.error('Failed to get short-term token:', err);",
          "                reject(err);",
          "                return;",
          "            }",
          "            ",
          "            if (response.code === 200 || response.code === 201) {",
          "                const data = response.json();",
          "                pm.environment.set(config.shortTokenVar, data.access_token);",
          "                pm.environment.set(config.tokenExpiryVar, data.expires_at);",
          "                pm.environment.set(config.tokenIdVar, data.token_id);",
          "                console.log(`Short-term token obtained: ${data.token_id}, expires: ${data.expires_at}`);",
          "                resolve(data.access_token);",
          "            } else {",
          "                console.error('Failed to get short-term token:', response.text());",
          "                reject(new Error(`HTTP ${response.code}: ${response.text()}`));",
          "            }",
          "        });",
          "    });",
          "}",
          "",
          "// Main authentication flow",
          "async function authenticate() {",
          "    try {",
          "        // Skip auth for token endpoints",
          "        const currentPath = pm.request.url.getPath();",
          "        if (currentPath.includes('/auth/tokens/')) {",
          "            console.log('Skipping auth for token endpoint');",
          "            return;",
          "        }",
          "        ",
          "        // Check if we need client credentials",
          "        if (!config.clientId || !config.clientSecret) {",
          "            console.warn('Client credentials not configured. Set clientId and clientSecret in environment.');",
          "            return;",
          "        }",
          "        ",
          "        // Get current tokens from environment",
          "        let longTermToken = pm.environment.get(config.longTokenVar);",
          "        const shortTermToken = pm.environment.get(config.shortTokenVar);",
          "        const tokenExpiry = pm.environment.get(config.tokenExpiryVar);",
          "        ",
          "        // Check if we need to refresh tokens",
          "        if (!longTermToken) {",
          "            // No long-term token, get one",
          "            longTermToken = await getLongTermToken();",
          "        }",
          "        ",
          "        if (!shortTermToken || isTokenExpired(tokenExpiry)) {",
          "            // No short-term token or it's expired, get a new one",
          "            await getShortTermToken(longTermToken);",
          "        } else {",
          "            console.log('Using existing valid short-term token');",
          "        }",
          "        ",
          "        // Set the Authorization header with the short-term token",
          "        const currentShortToken = pm.environment.get(config.shortTokenVar);",
          "        pm.request.headers.add({",
          "            key: 'Authorization',",
          "            value: `Bearer ${currentShortToken}`",
          "        });",
          "        ",
          "        console.log('Authentication complete, Authorization header set');",
          "        ",
          "    } catch (error) {",
          "        console.error('Authentication failed:', error);",
          "        throw error;",
          "    }",
          "}",
          "",
          "// Execute authentication",
          "authenticate().catch(error => {",
          "    // Set an error variable that tests can check",
          "    pm.environment.set('authError', error.toString());",
          "    console.error('Pre-request script failed:', error);",
          "});",
          "",
          "// Utility functions for manual token management (can be called from Tests tab)",
          "pm.globals.set('revokeCurrentToken', async function() {",
          "    const tokenId = pm.environment.get(config.tokenIdVar);",
          "    const token = pm.environment.get(config.shortTokenVar);",
          "    ",
          "    if (!tokenId || !token) {",
          "        console.log('No token to revoke');",
          "        return;",
          "    }",
          "    ",
          "    const request = {",
          "        url: `${config.authUrl}/auth/tokens/${tokenId}/revoke`,",
          "        method: 'POST',",
          "        header: {",
          "            'Authorization': `Bearer ${token}`",
          "        }",
          "    };",
          "    ",
          "    pm.sendRequest(request, (err, response) => {",
          "        if (err) {",
          "            console.error('Failed to revoke token:', err);",
          "        } else if (response.code === 200 || response.code === 204) {",
          "            console.log(`Token ${tokenId} revoked successfully`);",
          "            pm.environment.unset(config.shortTokenVar);",
          "            pm.environment.unset(config.tokenExpiryVar);",
          "            pm.environment.unset(config.tokenIdVar);",
          "        } else {",
          "            console.error('Failed to revoke token:', response.text());",
          "        }",
          "    });",
          "});",
          "",
          "pm.globals.set('refreshTokens', async function() {",
          "    try {",
          "        const longTermToken = pm.environment.get(config.longTokenVar) || await getLongTermToken();",
          "        await getShortTermToken(longTermToken);",
          "        console.log('Tokens refreshed successfully');",
          "    } catch (error) {",
          "        console.error('Failed to refresh tokens:', error);",
          "    }",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "token",
      "value": "eyJhbGciOiJub25lIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTczNjI5MjEyNH0.",
      "type": "string"
    },
    {
      "key": "baseUrl",
      "value": "{{baseUrl}}",
      "type": "string"
    }
  ]
}