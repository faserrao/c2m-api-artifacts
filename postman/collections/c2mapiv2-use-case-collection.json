{
  "info": {
    "name": "C2M API v2 \u2013 Real World Use Cases",
    "description": "This collection demonstrates real-world use cases for the C2M API v2. Each folder represents a specific business scenario with pre-populated test data.\n\n**Authentication Setup:**\n1. Click Variables tab and set:\n   - `clientId`: Your client ID\n   - `clientSecret`: Your client secret\n   - `authUrl`: Authentication server (pre-filled)\n   - `baseUrl`: API server or mock URL\n2. The collection automatically handles JWT tokens\n3. Open Console (View \u2192 Show Postman Console) to see auth flow\n\n**Getting Started:**\n1. Configure authentication variables above\n2. Choose a use case folder\n3. Run the Submit Job request\n4. Use the saved jobId to run follow-up requests\n\n**Use Cases Included:**\n- Legal Firm\n- Company #1\n- Company #2\n- Real Estate Agent\n- Medical Agency\n- Monthly Newsletters\n- Reseller #1\n- Reseller #2\n\n**JWT Authentication:**\n- Tokens are acquired automatically before each request\n- View Console to see token acquisition process\n- Tokens are cached and reused until expiry\n- No manual token management needed!",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "6fedf162-fb69-492d-b614-802de4c96104",
    "version": {
      "major": 1,
      "minor": 0,
      "patch": 0
    }
  },
  "item": [
    {
      "name": "Legal Firm",
      "description": "We have letters that we need to send all day. Each letter is sent to a specific recipient via Certified Mail. A copy is sent to their legal representative via First Class mail. Our system generates the PDF of the letter.",
      "item": [
        {
          "name": "[single-doc-job-template]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Save jobId for follow-up requests",
                  "const response = pm.response.json();",
                  "if (response.jobId) {",
                  "    pm.collectionVariables.set('jobId', response.jobId);",
                  "    console.log('Job ID saved:', response.jobId);",
                  "}",
                  "",
                  "// Basic tests",
                  "pm.test('Status code is 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Response has jobId', function () {",
                  "    pm.expect(response).to.have.property('jobId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": {\n    \"documentId\": 1234\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"address1\": \"123 Main Street\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zip\": \"10001\",\n      \"country\": \"USA\"\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith (Attorney)\",\n      \"address1\": \"456 Legal Avenue\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zip\": \"10002\",\n      \"country\": \"USA\",\n      \"nickName\": \"Attorney Copy\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"legal\",\n    \"certified\",\n    \"client-correspondence\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/jobs/single-doc-job-template",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "single-doc-job-template"
              ]
            },
            "description": "Submit a job for Legal Firm.\n\nWe have letters that we need to send all day. Each letter is sent to a specific recipient via Certified Mail. A copy is sent to their legal representative via First Class mail. Our system generates the PDF of the letter."
          },
          "response": [
            {
              "name": "legal_firm - Document ID + Credit Card + New Address",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"documentId\": 1234\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"address1\": \"123 Main Street\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zip\": \"10001\",\n      \"country\": \"USA\"\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"legal\",\n    \"certified\",\n    \"client-correspondence\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "legal_firm - External URL + Invoice + Address List ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressListId\": 42\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"LEGAL_FIRM-2024-001\",\n      \"amountDue\": 150.0\n    }\n  },\n  \"tags\": [\n    \"legal\",\n    \"certified\",\n    \"client-correspondence\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "legal_firm - Upload Request + ACH + Address ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 100,\n    \"documentName\": \"legal_firm_document.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressId\": 12345\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"legal\",\n    \"certified\",\n    \"client-correspondence\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "legal_firm - Upload + Zip + User Credit + New Address",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 200,\n    \"zipId\": 10,\n    \"documentName\": \"legal_firm_doc.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"address1\": \"123 Main Street\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zip\": \"10001\",\n      \"country\": \"USA\"\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50.0\n    }\n  },\n  \"tags\": [\n    \"legal\",\n    \"certified\",\n    \"client-correspondence\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "legal_firm - Zip Only + Apple Pay + Address List ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"zipId\": 20,\n    \"documentName\": \"legal_firm_file.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressListId\": 42\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"legal\",\n    \"certified\",\n    \"client-correspondence\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            }
          ]
        },
        {
          "name": "Get Job Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has job details', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('jobId');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "description": "Retrieve detailed information about the job using the jobId from the Submit Job request."
          },
          "response": []
        },
        {
          "name": "Get Job Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status field', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(['queued', 'processing', 'completed', 'failed']).to.include(response.status);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}",
                "status"
              ]
            },
            "description": "Check the processing status of the job (queued, processing, completed, failed)."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Company #1",
      "description": "We send invoices at the end of the month. Each invoice is in its own PDF. The address of the recipient is in the invoice.",
      "item": [
        {
          "name": "[multi-pdf-address-capture]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Save jobId for follow-up requests",
                  "const response = pm.response.json();",
                  "if (response.jobId) {",
                  "    pm.collectionVariables.set('jobId', response.jobId);",
                  "    console.log('Job ID saved:', response.jobId);",
                  "}",
                  "",
                  "// Basic tests",
                  "pm.test('Status code is 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Response has jobId', function () {",
                  "    pm.expect(response).to.have.property('jobId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_001.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_002.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_003.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"BATCH-2024-001\",\n      \"amountDue\": 450.0\n    }\n  },\n  \"tags\": [\n    \"invoices\",\n    \"monthly-batch\",\n    \"accounts-receivable\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "multi-pdf-address-capture"
              ]
            },
            "description": "Submit a job for Company #1.\n\nWe send invoices at the end of the month. Each invoice is in its own PDF. The address of the recipient is in the invoice."
          },
          "response": [
            {
              "name": "company_invoice_batch - Document ID + Credit Card",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_001.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_002.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_003.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"invoices\",\n    \"monthly-batch\",\n    \"accounts-receivable\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-pdf-address-capture"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "company_invoice_batch - External URL + Invoice",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_001.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_002.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_003.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"COMPANY_INVOICE_BATCH-2024-001\",\n      \"amountDue\": 150.0\n    }\n  },\n  \"tags\": [\n    \"invoices\",\n    \"monthly-batch\",\n    \"accounts-receivable\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-pdf-address-capture"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "company_invoice_batch - Upload Request + ACH",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_001.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_002.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_003.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"invoices\",\n    \"monthly-batch\",\n    \"accounts-receivable\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-pdf-address-capture"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "company_invoice_batch - Upload + Zip + User Credit",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_001.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_002.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_003.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50.0\n    }\n  },\n  \"tags\": [\n    \"invoices\",\n    \"monthly-batch\",\n    \"accounts-receivable\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-pdf-address-capture"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "company_invoice_batch - Zip Only + Apple Pay",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"addressCapturePdfs\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_001.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_002.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"invoice_003.pdf\"\n      },\n      \"addressRegion\": {\n        \"x\": 300,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"windowedFlat\"\n  },\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"invoices\",\n    \"monthly-batch\",\n    \"accounts-receivable\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-pdf-address-capture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-pdf-address-capture"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            }
          ]
        },
        {
          "name": "Get Job Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has job details', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('jobId');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "description": "Retrieve detailed information about the job using the jobId from the Submit Job request."
          },
          "response": []
        },
        {
          "name": "Get Job Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status field', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(['queued', 'processing', 'completed', 'failed']).to.include(response.status);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}",
                "status"
              ]
            },
            "description": "Check the processing status of the job (queued, processing, completed, failed)."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Company #2",
      "description": "We send invoices at the end of the month. All the invoices are in a single big PDF. The addresses of the recipients are in the invoices.",
      "item": [
        {
          "name": "[single-pdf-split-addressCapture]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Save jobId for follow-up requests",
                  "const response = pm.response.json();",
                  "if (response.jobId) {",
                  "    pm.collectionVariables.set('jobId', response.jobId);",
                  "    console.log('Job ID saved:', response.jobId);",
                  "}",
                  "",
                  "// Basic tests",
                  "pm.test('Status code is 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Response has jobId', function () {",
                  "    pm.expect(response).to.have.property('jobId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 200,\n    \"zipId\": 10,\n    \"documentName\": \"combined_invoices.pdf\"\n  },\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 1,\n      \"endPage\": 1,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"startPage\": 2,\n      \"endPage\": 2,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"split-pdf\",\n    \"address-capture\",\n    \"automated\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "single-pdf-split-addressCapture"
              ]
            },
            "description": "Submit a job for Company #2.\n\nWe send invoices at the end of the month. All the invoices are in a single big PDF. The addresses of the recipients are in the invoices."
          },
          "response": [
            {
              "name": "company_split_invoices - Document ID + Credit Card",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"documentId\": 1234\n  },\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 1,\n      \"endPage\": 1,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"startPage\": 2,\n      \"endPage\": 2,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"split-pdf\",\n    \"address-capture\",\n    \"automated\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-pdf-split-addressCapture"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "company_split_invoices - External URL + Invoice",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n  },\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 1,\n      \"endPage\": 1,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"startPage\": 2,\n      \"endPage\": 2,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"COMPANY_SPLIT_INVOICES-2024-001\",\n      \"amountDue\": 150.0\n    }\n  },\n  \"tags\": [\n    \"split-pdf\",\n    \"address-capture\",\n    \"automated\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-pdf-split-addressCapture"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "company_split_invoices - Upload Request + ACH",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 100,\n    \"documentName\": \"company_split_invoices_document.pdf\"\n  },\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 1,\n      \"endPage\": 1,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"startPage\": 2,\n      \"endPage\": 2,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"split-pdf\",\n    \"address-capture\",\n    \"automated\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-pdf-split-addressCapture"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "company_split_invoices - Upload + Zip + User Credit",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 200,\n    \"zipId\": 10,\n    \"documentName\": \"company_split_invoices_doc.pdf\"\n  },\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 1,\n      \"endPage\": 1,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"startPage\": 2,\n      \"endPage\": 2,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50.0\n    }\n  },\n  \"tags\": [\n    \"split-pdf\",\n    \"address-capture\",\n    \"automated\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-pdf-split-addressCapture"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "company_split_invoices - Zip Only + Apple Pay",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"zipId\": 20,\n    \"documentName\": \"company_split_invoices_file.pdf\"\n  },\n  \"embeddedExtractionSpecs\": [\n    {\n      \"startPage\": 1,\n      \"endPage\": 1,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    },\n    {\n      \"startPage\": 2,\n      \"endPage\": 2,\n      \"addressRegion\": {\n        \"x\": 50,\n        \"y\": 100,\n        \"width\": 200,\n        \"height\": 100,\n        \"pageOffset\": 0\n      }\n    }\n  ],\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"split-pdf\",\n    \"address-capture\",\n    \"automated\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-pdf-split-addressCapture",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-pdf-split-addressCapture"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            }
          ]
        },
        {
          "name": "Get Job Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has job details', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('jobId');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "description": "Retrieve detailed information about the job using the jobId from the Submit Job request."
          },
          "response": []
        },
        {
          "name": "Get Job Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status field', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(['queued', 'processing', 'completed', 'failed']).to.include(response.status);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}",
                "status"
              ]
            },
            "description": "Check the processing status of the job (queued, processing, completed, failed)."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Real Estate Agent",
      "description": "We send postcards as part of our campaign. The postcards have a specific template and use mail merge.",
      "item": [
        {
          "name": "[single-doc-job-template]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Save jobId for follow-up requests",
                  "const response = pm.response.json();",
                  "if (response.jobId) {",
                  "    pm.collectionVariables.set('jobId', response.jobId);",
                  "    console.log('Job ID saved:', response.jobId);",
                  "}",
                  "",
                  "// Basic tests",
                  "pm.test('Status code is 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Response has jobId', function () {",
                  "    pm.expect(response).to.have.property('jobId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": {\n    \"externalUrl\": \"https://api.example.com/v1/marketing/postcards/luxury-homes\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressListId\": 100\n    },\n    {\n      \"addressListId\": 101\n    },\n    {\n      \"addressListId\": 102\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"postcard\"\n  },\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 500.0\n    }\n  },\n  \"tags\": [\n    \"marketing\",\n    \"postcards\",\n    \"real-estate\",\n    \"bulk-mail\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/jobs/single-doc-job-template",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "single-doc-job-template"
              ]
            },
            "description": "Submit a job for Real Estate Agent.\n\nWe send postcards as part of our campaign. The postcards have a specific template and use mail merge."
          },
          "response": [
            {
              "name": "real_estate_agent - Document ID + Credit Card + New Address",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"documentId\": 1234\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"address1\": \"123 Main Street\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zip\": \"10001\",\n      \"country\": \"USA\"\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"postcard\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"marketing\",\n    \"postcards\",\n    \"real-estate\",\n    \"bulk-mail\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "real_estate_agent - External URL + Invoice + Address List ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressListId\": 42\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"postcard\"\n  },\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"REAL_ESTATE_AGENT-2024-001\",\n      \"amountDue\": 150.0\n    }\n  },\n  \"tags\": [\n    \"marketing\",\n    \"postcards\",\n    \"real-estate\",\n    \"bulk-mail\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "real_estate_agent - Upload Request + ACH + Address ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 100,\n    \"documentName\": \"real_estate_agent_document.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressId\": 12345\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"postcard\"\n  },\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"marketing\",\n    \"postcards\",\n    \"real-estate\",\n    \"bulk-mail\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "real_estate_agent - Upload + Zip + User Credit + New Address",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 200,\n    \"zipId\": 10,\n    \"documentName\": \"real_estate_agent_doc.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"address1\": \"123 Main Street\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zip\": \"10001\",\n      \"country\": \"USA\"\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"postcard\"\n  },\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50.0\n    }\n  },\n  \"tags\": [\n    \"marketing\",\n    \"postcards\",\n    \"real-estate\",\n    \"bulk-mail\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "real_estate_agent - Zip Only + Apple Pay + Address List ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"zipId\": 20,\n    \"documentName\": \"real_estate_agent_file.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressListId\": 42\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"landscape\",\n    \"mailclass\": \"firstClassMail\",\n    \"paperType\": \"postcard\",\n    \"printOption\": \"color\",\n    \"envelope\": \"postcard\"\n  },\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"marketing\",\n    \"postcards\",\n    \"real-estate\",\n    \"bulk-mail\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            }
          ]
        },
        {
          "name": "Get Job Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has job details', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('jobId');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "description": "Retrieve detailed information about the job using the jobId from the Submit Job request."
          },
          "response": []
        },
        {
          "name": "Get Job Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status field', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(['queued', 'processing', 'completed', 'failed']).to.include(response.status);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}",
                "status"
              ]
            },
            "description": "Check the processing status of the job (queued, processing, completed, failed)."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Medical Agency",
      "description": "We send medical reports to patients. Each report is a custom PDF. In addition, a few boiler-plate pages of generic medical information are sent with each report.",
      "item": [
        {
          "name": "[multi-doc-merge-job-template]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Save jobId for follow-up requests",
                  "const response = pm.response.json();",
                  "if (response.jobId) {",
                  "    pm.collectionVariables.set('jobId', response.jobId);",
                  "    console.log('Job ID saved:', response.jobId);",
                  "}",
                  "",
                  "// Basic tests",
                  "pm.test('Status code is 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Response has jobId', function () {",
                  "    pm.expect(response).to.have.property('jobId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": 1001\n    },\n    {\n      \"uploadRequestId\": 300,\n      \"documentName\": \"patient_report.pdf\"\n    },\n    {\n      \"documentId\": 1002\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"Patient\",\n    \"lastName\": \"Name\",\n    \"address1\": \"789 Health Street\",\n    \"address2\": \"Suite 200\",\n    \"city\": \"Chicago\",\n    \"state\": \"IL\",\n    \"zip\": \"60601\",\n    \"country\": \"USA\"\n  },\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"MED-2024-567\",\n      \"amountDue\": 75.0\n    }\n  },\n  \"tags\": [\n    \"medical\",\n    \"compliance\",\n    \"patient-reports\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "multi-doc-merge-job-template"
              ]
            },
            "description": "Submit a job for Medical Agency.\n\nWe send medical reports to patients. Each report is a custom PDF. In addition, a few boiler-plate pages of generic medical information are sent with each report."
          },
          "response": [
            {
              "name": "medical_agency - Document ID + Credit Card + New Address",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": 1001\n    },\n    {\n      \"documentId\": 1234\n    },\n    {\n      \"documentId\": 1002\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"address1\": \"123 Main Street\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zip\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"medical\",\n    \"compliance\",\n    \"patient-reports\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-doc-merge-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "medical_agency - External URL + Invoice + Address List ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": 1001\n    },\n    {\n      \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n    },\n    {\n      \"documentId\": 1002\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"addressListId\": 42\n  },\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"MEDICAL_AGENCY-2024-001\",\n      \"amountDue\": 150.0\n    }\n  },\n  \"tags\": [\n    \"medical\",\n    \"compliance\",\n    \"patient-reports\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-doc-merge-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "medical_agency - Upload Request + ACH + Address ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": 1001\n    },\n    {\n      \"uploadRequestId\": 100,\n      \"documentName\": \"medical_agency_document.pdf\"\n    },\n    {\n      \"documentId\": 1002\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"addressId\": 12345\n  },\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"medical\",\n    \"compliance\",\n    \"patient-reports\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-doc-merge-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "medical_agency - Upload + Zip + User Credit + New Address",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": 1001\n    },\n    {\n      \"uploadRequestId\": 200,\n      \"zipId\": 10,\n      \"documentName\": \"medical_agency_doc.pdf\"\n    },\n    {\n      \"documentId\": 1002\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"address1\": \"123 Main Street\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zip\": \"10001\",\n    \"country\": \"USA\"\n  },\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50.0\n    }\n  },\n  \"tags\": [\n    \"medical\",\n    \"compliance\",\n    \"patient-reports\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-doc-merge-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "medical_agency - Zip Only + Apple Pay + Address List ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentsToMerge\": [\n    {\n      \"documentId\": 1001\n    },\n    {\n      \"zipId\": 20,\n      \"documentName\": \"medical_agency_file.pdf\"\n    },\n    {\n      \"documentId\": 1002\n    }\n  ],\n  \"recipientAddressSource\": {\n    \"addressListId\": 42\n  },\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"medical\",\n    \"compliance\",\n    \"patient-reports\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-doc-merge-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-doc-merge-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            }
          ]
        },
        {
          "name": "Get Job Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has job details', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('jobId');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "description": "Retrieve detailed information about the job using the jobId from the Submit Job request."
          },
          "response": []
        },
        {
          "name": "Get Job Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status field', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(['queued', 'processing', 'completed', 'failed']).to.include(response.status);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}",
                "status"
              ]
            },
            "description": "Check the processing status of the job (queued, processing, completed, failed)."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Monthly Newsletters",
      "description": "We are an organization that sends out flyers at the beginning of each month to our subscribers. The flyer is a static document and we have a mailing list it has to go out to.",
      "item": [
        {
          "name": "[single-doc-job-template]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Save jobId for follow-up requests",
                  "const response = pm.response.json();",
                  "if (response.jobId) {",
                  "    pm.collectionVariables.set('jobId', response.jobId);",
                  "    console.log('Job ID saved:', response.jobId);",
                  "}",
                  "",
                  "// Basic tests",
                  "pm.test('Status code is 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Response has jobId', function () {",
                  "    pm.expect(response).to.have.property('jobId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": {\n    \"zipId\": 50,\n    \"documentName\": \"newsletter_december_2024.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressListId\": 200\n    },\n    {\n      \"addressListId\": 201\n    },\n    {\n      \"addressListId\": 202\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"mastercard\",\n      \"cardNumber\": \"5555555555554444\",\n      \"expirationDate\": {\n        \"month\": 6,\n        \"year\": 2026\n      },\n      \"cvv\": 456\n    }\n  },\n  \"tags\": [\n    \"newsletter\",\n    \"monthly\",\n    \"subscribers\",\n    \"marketing\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/jobs/single-doc-job-template",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "single-doc-job-template"
              ]
            },
            "description": "Submit a job for Monthly Newsletters.\n\nWe are an organization that sends out flyers at the beginning of each month to our subscribers. The flyer is a static document and we have a mailing list it has to go out to."
          },
          "response": [
            {
              "name": "monthly_newsletters - Document ID + Credit Card + New Address",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"documentId\": 1234\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"address1\": \"123 Main Street\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zip\": \"10001\",\n      \"country\": \"USA\"\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"newsletter\",\n    \"monthly\",\n    \"subscribers\",\n    \"marketing\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "monthly_newsletters - External URL + Invoice + Address List ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressListId\": 42\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"MONTHLY_NEWSLETTERS-2024-001\",\n      \"amountDue\": 150.0\n    }\n  },\n  \"tags\": [\n    \"newsletter\",\n    \"monthly\",\n    \"subscribers\",\n    \"marketing\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "monthly_newsletters - Upload Request + ACH + Address ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 100,\n    \"documentName\": \"monthly_newsletters_document.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressId\": 12345\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"newsletter\",\n    \"monthly\",\n    \"subscribers\",\n    \"marketing\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "monthly_newsletters - Upload + Zip + User Credit + New Address",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 200,\n    \"zipId\": 10,\n    \"documentName\": \"monthly_newsletters_doc.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"address1\": \"123 Main Street\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zip\": \"10001\",\n      \"country\": \"USA\"\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50.0\n    }\n  },\n  \"tags\": [\n    \"newsletter\",\n    \"monthly\",\n    \"subscribers\",\n    \"marketing\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "monthly_newsletters - Zip Only + Apple Pay + Address List ID",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"zipId\": 20,\n    \"documentName\": \"monthly_newsletters_file.pdf\"\n  },\n  \"recipientAddressSources\": [\n    {\n      \"addressListId\": 42\n    },\n    {\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Smith\",\n      \"address1\": \"456 Oak Avenue\",\n      \"city\": \"Boston\",\n      \"state\": \"MA\",\n      \"zip\": \"02101\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"personalLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"largeEnvelope\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"color\",\n    \"envelope\": \"flat\"\n  },\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"newsletter\",\n    \"monthly\",\n    \"subscribers\",\n    \"marketing\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-doc-job-template",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-doc-job-template"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            }
          ]
        },
        {
          "name": "Get Job Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has job details', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('jobId');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "description": "Retrieve detailed information about the job using the jobId from the Submit Job request."
          },
          "response": []
        },
        {
          "name": "Get Job Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status field', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(['queued', 'processing', 'completed', 'failed']).to.include(response.status);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}",
                "status"
              ]
            },
            "description": "Check the processing status of the job (queued, processing, completed, failed)."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reseller #1",
      "description": "We receive PDFs from our customers. Each PDF is unique. We want to batch the PDFs into a single big PDF and send them in one go.",
      "item": [
        {
          "name": "[single-pdf-split]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Save jobId for follow-up requests",
                  "const response = pm.response.json();",
                  "if (response.jobId) {",
                  "    pm.collectionVariables.set('jobId', response.jobId);",
                  "    console.log('Job ID saved:', response.jobId);",
                  "}",
                  "",
                  "// Basic tests",
                  "pm.test('Status code is 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Response has jobId', function () {",
                  "    pm.expect(response).to.have.property('jobId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 400,\n    \"documentName\": \"batched_pdfs.pdf\"\n  },\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 1,\n        \"endPage\": 5\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 301\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 6,\n        \"endPage\": 10\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 302\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 11,\n        \"endPage\": 15\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 303\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"pdf-merge\",\n    \"b2b\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/jobs/single-pdf-split",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "single-pdf-split"
              ]
            },
            "description": "Submit a job for Reseller #1.\n\nWe receive PDFs from our customers. Each PDF is unique. We want to batch the PDFs into a single big PDF and send them in one go."
          },
          "response": [
            {
              "name": "reseller_merge_pdfs - Document ID + Credit Card",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"documentId\": 1234\n  },\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 1,\n        \"endPage\": 5\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 301\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 6,\n        \"endPage\": 10\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 302\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 11,\n        \"endPage\": 15\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 303\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"pdf-merge\",\n    \"b2b\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-pdf-split",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-pdf-split"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "reseller_merge_pdfs - External URL + Invoice",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n  },\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 1,\n        \"endPage\": 5\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 301\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 6,\n        \"endPage\": 10\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 302\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 11,\n        \"endPage\": 15\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 303\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"RESELLER_MERGE_PDFS-2024-001\",\n      \"amountDue\": 150.0\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"pdf-merge\",\n    \"b2b\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-pdf-split",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-pdf-split"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "reseller_merge_pdfs - Upload Request + ACH",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 100,\n    \"documentName\": \"reseller_merge_pdfs_document.pdf\"\n  },\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 1,\n        \"endPage\": 5\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 301\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 6,\n        \"endPage\": 10\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 302\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 11,\n        \"endPage\": 15\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 303\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"pdf-merge\",\n    \"b2b\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-pdf-split",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-pdf-split"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "reseller_merge_pdfs - Upload + Zip + User Credit",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"uploadRequestId\": 200,\n    \"zipId\": 10,\n    \"documentName\": \"reseller_merge_pdfs_doc.pdf\"\n  },\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 1,\n        \"endPage\": 5\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 301\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 6,\n        \"endPage\": 10\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 302\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 11,\n        \"endPage\": 15\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 303\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50.0\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"pdf-merge\",\n    \"b2b\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-pdf-split",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-pdf-split"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "reseller_merge_pdfs - Zip Only + Apple Pay",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"documentSourceIdentifier\": {\n    \"zipId\": 20,\n    \"documentName\": \"reseller_merge_pdfs_file.pdf\"\n  },\n  \"items\": [\n    {\n      \"pageRange\": {\n        \"startPage\": 1,\n        \"endPage\": 5\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 301\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 6,\n        \"endPage\": 10\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 302\n        }\n      ]\n    },\n    {\n      \"pageRange\": {\n        \"startPage\": 11,\n        \"endPage\": 15\n      },\n      \"recipientAddressSources\": [\n        {\n          \"addressListId\": 303\n        }\n      ]\n    }\n  ],\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"pdf-merge\",\n    \"b2b\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/single-pdf-split",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "single-pdf-split"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            }
          ]
        },
        {
          "name": "Get Job Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has job details', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('jobId');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "description": "Retrieve detailed information about the job using the jobId from the Submit Job request."
          },
          "response": []
        },
        {
          "name": "Get Job Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status field', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(['queued', 'processing', 'completed', 'failed']).to.include(response.status);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}",
                "status"
              ]
            },
            "description": "Check the processing status of the job (queued, processing, completed, failed)."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reseller #2",
      "description": "We receive PDFs from our customers. Each PDF is unique. We want to zip the PDFs and send them in one go.",
      "item": [
        {
          "name": "[multi-doc]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Save jobId for follow-up requests",
                  "const response = pm.response.json();",
                  "if (response.jobId) {",
                  "    pm.collectionVariables.set('jobId', response.jobId);",
                  "    console.log('Job ID saved:', response.jobId);",
                  "}",
                  "",
                  "// Basic tests",
                  "pm.test('Status code is 200 or 201', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Response has jobId', function () {",
                  "    pm.expect(response).to.have.property('jobId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 500,\n        \"zipId\": 20,\n        \"documentName\": \"document_01.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6001\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 500,\n        \"zipId\": 20,\n        \"documentName\": \"document_02.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6002\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 500,\n        \"zipId\": 20,\n        \"documentName\": \"document_03.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6003\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"googlePayDetails\": {\n      \"googlePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"zip-processing\",\n    \"batch\",\n    \"b2b\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/jobs/multi-doc",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "multi-doc"
              ]
            },
            "description": "Submit a job for Reseller #2.\n\nWe receive PDFs from our customers. Each PDF is unique. We want to zip the PDFs and send them in one go."
          },
          "response": [
            {
              "name": "reseller_zip_pdfs - Document ID + Credit Card",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"documentId\": 1234\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6001\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"documentId\": 1234\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6002\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"documentId\": 1234\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6003\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"creditCardDetails\": {\n      \"cardType\": \"visa\",\n      \"cardNumber\": \"4111111111111111\",\n      \"expirationDate\": {\n        \"month\": 12,\n        \"year\": 2025\n      },\n      \"cvv\": 123\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"zip-processing\",\n    \"batch\",\n    \"b2b\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-doc",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-doc"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "reseller_zip_pdfs - External URL + Invoice",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6001\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6002\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"externalUrl\": \"https://api.example.com/v1/documents/5678\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6003\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"invoiceDetails\": {\n      \"invoiceNumber\": \"RESELLER_ZIP_PDFS-2024-001\",\n      \"amountDue\": 150.0\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"zip-processing\",\n    \"batch\",\n    \"b2b\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-doc",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-doc"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "reseller_zip_pdfs - Upload Request + ACH",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"reseller_zip_pdfs_document.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6001\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"reseller_zip_pdfs_document.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6002\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 100,\n        \"documentName\": \"reseller_zip_pdfs_document.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6003\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"achDetails\": {\n      \"routingNumber\": \"021000021\",\n      \"accountNumber\": \"1234567890\",\n      \"checkDigit\": 7\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"zip-processing\",\n    \"batch\",\n    \"b2b\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-doc",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-doc"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "reseller_zip_pdfs - Upload + Zip + User Credit",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 200,\n        \"zipId\": 10,\n        \"documentName\": \"reseller_zip_pdfs_doc.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6001\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 200,\n        \"zipId\": 10,\n        \"documentName\": \"reseller_zip_pdfs_doc.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6002\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"uploadRequestId\": 200,\n        \"zipId\": 10,\n        \"documentName\": \"reseller_zip_pdfs_doc.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6003\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"userCreditDetails\": {\n      \"creditAmount\": 50.0\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"zip-processing\",\n    \"batch\",\n    \"b2b\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-doc",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-doc"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            },
            {
              "name": "reseller_zip_pdfs - Zip Only + Apple Pay",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}",
                    "description": "JWT authentication token"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"documentSourceIdentifier\": {\n        \"zipId\": 20,\n        \"documentName\": \"reseller_zip_pdfs_file.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6001\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"zipId\": 20,\n        \"documentName\": \"reseller_zip_pdfs_file.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6002\n      }\n    },\n    {\n      \"documentSourceIdentifier\": {\n        \"zipId\": 20,\n        \"documentName\": \"reseller_zip_pdfs_file.pdf\"\n      },\n      \"recipientAddressSource\": {\n        \"addressId\": 6003\n      }\n    }\n  ],\n  \"jobOptions\": {\n    \"documentClass\": \"businessLetter\",\n    \"layout\": \"portrait\",\n    \"mailclass\": \"priorityMail\",\n    \"paperType\": \"letter\",\n    \"printOption\": \"grayscale\",\n    \"envelope\": \"letter\"\n  },\n  \"paymentDetails\": {\n    \"applePayDetails\": {\n      \"applePaymentDetails\": {}\n    }\n  },\n  \"tags\": [\n    \"reseller\",\n    \"zip-processing\",\n    \"batch\",\n    \"b2b\"\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/jobs/multi-doc",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "jobs",
                    "multi-doc"
                  ]
                }
              },
              "status": "Success",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"Job created successfully\",\n  \"jobId\": 123456\n}"
            }
          ]
        },
        {
          "name": "Get Job Details",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has job details', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('jobId');",
                  "    pm.expect(response).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}"
              ]
            },
            "description": "Retrieve detailed information about the job using the jobId from the Submit Job request."
          },
          "response": []
        },
        {
          "name": "Get Job Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status field', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(['queued', 'processing', 'completed', 'failed']).to.include(response.status);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "description": "JWT authentication token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/jobs/{{jobId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "jobs",
                "{{jobId}}",
                "status"
              ]
            },
            "description": "Check the processing status of the job (queued, processing, completed, failed)."
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// JWT Authentication Pre-request Script",
          "// This script automatically handles JWT token acquisition and refresh",
          "",
          "// Skip auth for token endpoints themselves",
          "if (pm.request.url.path.includes('auth/tokens')) {",
          "    console.log('Skipping auth for token endpoint');",
          "    return;",
          "}",
          "",
          "// Check if we have client credentials",
          "const clientId = pm.environment.get('clientId') || pm.collectionVariables.get('clientId');",
          "const clientSecret = pm.environment.get('clientSecret') || pm.collectionVariables.get('clientSecret');",
          "",
          "if (!clientId || !clientSecret) {",
          "    console.warn('Client credentials not configured. Set clientId and clientSecret in environment.');",
          "    return;",
          "}",
          "",
          "// Function to get a new token",
          "async function getNewToken() {",
          "    const authUrl = pm.environment.get('authUrl') || pm.collectionVariables.get('authUrl');",
          "    if (!authUrl) {",
          "        console.error('authUrl not configured');",
          "        return null;",
          "    }",
          "",
          "    const tokenRequest = {",
          "        url: authUrl + '/auth/tokens/long',",
          "        method: 'POST',",
          "        header: {",
          "            'Content-Type': 'application/json'",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                grant_type: 'client_credentials',",
          "                client_id: clientId,",
          "                client_secret: clientSecret",
          "            })",
          "        }",
          "    };",
          "",
          "    try {",
          "        const response = await pm.sendRequest(tokenRequest);",
          "        if (response.code === 200 || response.code === 201) {",
          "            const tokenData = response.json();",
          "            return tokenData.access_token;",
          "        } else {",
          "            console.error('Failed to get token:', response.code, response.status);",
          "            return null;",
          "        }",
          "    } catch (error) {",
          "        console.error('Error getting token:', error);",
          "        return null;",
          "    }",
          "}",
          "",
          "// Main authentication logic",
          "(async function() {",
          "    let token = pm.environment.get('authToken') || pm.collectionVariables.get('authToken');",
          "    ",
          "    // If no token, get a new one",
          "    if (!token) {",
          "        console.log('No token found, acquiring new token...');",
          "        token = await getNewToken();",
          "        if (token) {",
          "            pm.environment.set('authToken', token);",
          "            pm.collectionVariables.set('authToken', token);",
          "        }",
          "    }",
          "    ",
          "    // Add token to request if we have one",
          "    if (token) {",
          "        // Check if we're using a mock server - if so, skip adding the Authorization header",
          "        const baseUrl = pm.environment.get('baseUrl') || pm.collectionVariables.get('baseUrl') || '';",
          "        const isMockServer = baseUrl.includes('mock.pstmn.io') || ",
          "                           baseUrl.includes('localhost:4010') ||",
          "                           pm.environment.get('isMockServer') === 'true';",
          "        ",
          "        if (!isMockServer) {",
          "            pm.request.headers.add({",
          "                key: 'Authorization',",
          "                value: 'Bearer ' + token",
          "            });",
          "            console.log('Authorization header added');",
          "        } else {",
          "            console.log('Mock server detected - skipping Authorization header');",
          "        }",
          "    } else {",
          "        console.warn('No token available - request may fail with 401');",
          "    }",
          "})();"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.example.com/v1",
      "type": "string",
      "description": "Base URL for the C2M API"
    },
    {
      "key": "authUrl",
      "value": "https://j0dos52r5e.execute-api.us-east-1.amazonaws.com/dev",
      "type": "string",
      "description": "Authentication server URL"
    },
    {
      "key": "clientId",
      "value": "",
      "type": "string",
      "description": "Client ID for authentication"
    },
    {
      "key": "clientSecret",
      "value": "",
      "type": "string",
      "description": "Client secret for authentication (keep secure!)"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string",
      "description": "JWT authentication token (auto-populated)"
    },
    {
      "key": "jobId",
      "value": "",
      "type": "string",
      "description": "Current job ID (automatically set by Submit Job requests)"
    }
  ]
}