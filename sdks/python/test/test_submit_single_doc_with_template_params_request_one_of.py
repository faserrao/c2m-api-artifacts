# coding: utf-8

"""
    C2M API v2 - Auth Overlay

    API for submitting documents with various routing options

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from c2m_api.models.submit_single_doc_with_template_params_request_one_of import SubmitSingleDocWithTemplateParamsRequestOneOf

class TestSubmitSingleDocWithTemplateParamsRequestOneOf(unittest.TestCase):
    """SubmitSingleDocWithTemplateParamsRequestOneOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubmitSingleDocWithTemplateParamsRequestOneOf:
        """Test SubmitSingleDocWithTemplateParamsRequestOneOf
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubmitSingleDocWithTemplateParamsRequestOneOf`
        """
        model = SubmitSingleDocWithTemplateParamsRequestOneOf()
        if include_optional:
            return SubmitSingleDocWithTemplateParamsRequestOneOf(
                job_template = '',
                payment_details = None,
                tags = [
                    ''
                    ],
                recipient_address_sources = [
                    null
                    ]
            )
        else:
            return SubmitSingleDocWithTemplateParamsRequestOneOf(
                job_template = '',
                payment_details = None,
                recipient_address_sources = [
                    null
                    ],
        )
        """

    def testSubmitSingleDocWithTemplateParamsRequestOneOf(self):
        """Test SubmitSingleDocWithTemplateParamsRequestOneOf"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
